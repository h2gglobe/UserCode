//
// File generated by rootcint at Wed Apr 20 17:42:54 2011

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/home/nick/Imperial/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "/home/nick/Imperial/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned short>

namespace ROOT {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "/home/nick/Imperial/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<int> >

namespace ROOT {
   void vectorlEvectorlEunsignedsPshortgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEunsignedsPshortgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEunsignedsPshortgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEunsignedsPshortgRsPgR(void *p);
   static void destruct_vectorlEvectorlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<unsigned short> >*)
   {
      vector<vector<unsigned short> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<unsigned short> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<unsigned short> >", -2, "/home/nick/Imperial/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<unsigned short> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<unsigned short> >) );
      instance.SetNew(&new_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEunsignedsPshortgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<unsigned short> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<unsigned short> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEunsignedsPshortgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<unsigned short> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned short> > : new vector<vector<unsigned short> >;
   }
   static void *newArray_vectorlEvectorlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned short> >[nElements] : new vector<vector<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      delete ((vector<vector<unsigned short> >*)p);
   }
   static void deleteArray_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((vector<vector<unsigned short> >*)p);
   }
   static void destruct_vectorlEvectorlEunsignedsPshortgRsPgR(void *p) {
      typedef vector<vector<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<unsigned short> >

/********************************************************
* dict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabledict();

extern "C" void G__set_cpp_environmentdict() {
  G__cpp_reset_tagtabledict();
}
#include <new>
extern "C" int G__cpp_dllrevdict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */
static int G__dict_161_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >& obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->at((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->resize((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->resize((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]), *((vector<unsigned short,allocator<unsigned short> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >& obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >;
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >& obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->operator=(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->reserve((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >& obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned short,allocator<unsigned short> >& obj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->push_back(*(vector<unsigned short,allocator<unsigned short> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->swap(*(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator* pobj;
         vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator xobj = ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), *(vector<unsigned short,allocator<unsigned short> >*) libp->para[1].ref);
         pobj = new vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), (vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type) G__int(libp->para[1])
, *(vector<unsigned short,allocator<unsigned short> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_161_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > G__TvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR;
static int G__dict_161_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) (soff+(sizeof(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >)*i)))->~G__TvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*) (soff))->~G__TvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
static int G__dict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->at((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->resize((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->resize((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *((vector<int,allocator<int> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->operator[]((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >;
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *(vector<int,allocator<int> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *(vector<int,allocator<int> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->operator=(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->reserve((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->push_back(*(vector<int,allocator<int> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->swap(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *(vector<int,allocator<int> >*) libp->para[1].ref);
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[1])
, *(vector<int,allocator<int> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->erase(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->erase(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_169_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR;
static int G__dict_169_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) (soff+(sizeof(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >)*i)))->~G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) (soff))->~G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<string,allocator<string> > */
static int G__dict_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((vector<string,allocator<string> >*) G__getstructoffset())->at((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->begin();
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->end();
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::reverse_iterator* pobj;
         vector<string,allocator<string> >::reverse_iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->rbegin();
         pobj = new vector<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::reverse_iterator* pobj;
         vector<string,allocator<string> >::reverse_iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->rend();
         pobj = new vector<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->resize((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->resize((vector<string,allocator<string> >::size_type) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((vector<string,allocator<string> >*) G__getstructoffset())->operator[]((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >[n];
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >;
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]), *(string*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]), *(string*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<string,allocator<string> >(*(vector<string,allocator<string> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<string,allocator<string> >(*(vector<string,allocator<string> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<string,allocator<string> >(*((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<string,allocator<string> >(*((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >& obj = ((vector<string,allocator<string> >*) G__getstructoffset())->operator=(*(vector<string,allocator<string> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->reserve((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((vector<string,allocator<string> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((vector<string,allocator<string> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->push_back(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->swap(*(vector<string,allocator<string> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->insert(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), *(string*) libp->para[1].ref);
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->insert(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[1]))
, *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->insert(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), (vector<string,allocator<string> >::size_type) G__int(libp->para[1])
, *(string*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->erase(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->erase(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_173_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<string,allocator<string> > G__TvectorlEstringcOallocatorlEstringgRsPgR;
static int G__dict_173_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<string,allocator<string> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<string,allocator<string> >*) (soff+(sizeof(vector<string,allocator<string> >)*i)))->~G__TvectorlEstringcOallocatorlEstringgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<string,allocator<string> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<string,allocator<string> >*) (soff))->~G__TvectorlEstringcOallocatorlEstringgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */

/* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */

/* vector<string,allocator<string> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncdict {
 public:
  G__Sizep2memfuncdict(): p(&G__Sizep2memfuncdict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncdict::*p)();
};

size_t G__get_sizep2memfuncdict()
{
  G__Sizep2memfuncdict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancedict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabledict() {

   /* Setting up typedef entry */
   G__search_typename2("value_type",114,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",82,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",82,-1,256,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",114,-1,1,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",114,-1,257,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<unsigned short> >",117,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),256,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),1,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),257,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned short,allocator<unsigned short> > >",117,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int> >",117,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR),256,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR),1,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR),257,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_string),0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__dictLN_string),0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__dictLN_string),256,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__dictLN_string),1,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__dictLN_string),257,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */
static void G__setup_memvarvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   { vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > *p; p=(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
static void G__setup_memvarvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   { vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > *p; p=(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<string,allocator<string> > */
static void G__setup_memvarvectorlEstringcOallocatorlEstringgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   { vector<string,allocator<string> > *p; p=(vector<string,allocator<string> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvardict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR(void) {
   /* vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__dict_161_0_1, 117, G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 1, 1, 1, 1, 0, "h - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_161_0_2, 117, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_161_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_161_0_4, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_161_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_161_0_6, 104, -1, G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_161_0_7, 104, -1, G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_161_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_161_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - sz u 'vector<unsigned short,allocator<unsigned short> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_161_0_10, 104, -1, G__defined_typename("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_161_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_161_0_12, 117, G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 1, 1, 1, 1, 0, "h - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__dict_161_0_13, 105, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__dict_161_0_14, 105, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n u 'vector<unsigned short,allocator<unsigned short> >' - 11 '(vector<unsigned short,allocator<unsigned short> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__dict_161_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >",11664,G__dict_161_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - first u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_161_0_17, 117, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_161_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_161_0_19, 117, G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_161_0_20, 117, G__get_linked_tagnum(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_161_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_161_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_161_0_23, 117, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_161_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - first "
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_161_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position h - 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::size_type' 0 - n "
"u 'vector<unsigned short,allocator<unsigned short> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_161_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_161_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_161_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - first u 'vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_161_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >", 11790, G__dict_161_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR(void) {
   /* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__dict_169_0_1, 117, G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 1, 1, 1, 0, "h - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_169_0_2, 117, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_169_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_169_0_4, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_169_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_169_0_6, 104, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_169_0_7, 104, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_169_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_169_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - sz u 'vector<int,allocator<int> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_169_0_10, 104, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_169_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_169_0_12, 117, G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 1, 1, 1, 0, "h - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__dict_169_0_13, 105, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__dict_169_0_14, 105, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n u 'vector<int,allocator<int> >' - 11 '(vector<int,allocator<int> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__dict_169_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__dict_169_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - first u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_169_0_17, 117, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_169_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_169_0_19, 117, G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_169_0_20, 117, G__get_linked_tagnum(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_169_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_169_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_169_0_23, 117, G__get_linked_tagnum(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_169_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - first "
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_169_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position h - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n "
"u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_169_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_169_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_169_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - first u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_169_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >", 7302, G__dict_169_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEstringcOallocatorlEstringgRsPgR(void) {
   /* vector<string,allocator<string> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__memfunc_setup("at",213,G__dict_173_0_1, 117, G__get_linked_tagnum(&G__dictLN_string), -1, 1, 1, 1, 1, 0, "h - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_173_0_2, 117, G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_173_0_3, 117, G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_173_0_4, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR), G__defined_typename("vector<string,allocator<string> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_173_0_5, 117, G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR), G__defined_typename("vector<string,allocator<string> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_173_0_6, 104, -1, G__defined_typename("vector<string,allocator<string> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_173_0_7, 104, -1, G__defined_typename("vector<string,allocator<string> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_173_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<string,allocator<string> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__dict_173_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'vector<string,allocator<string> >::size_type' 0 - sz u 'string' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__dict_173_0_10, 104, -1, G__defined_typename("vector<string,allocator<string> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_173_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_173_0_12, 117, G__get_linked_tagnum(&G__dictLN_string), -1, 1, 1, 1, 1, 0, "h - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__dict_173_0_13, 105, G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__dict_173_0_14, 105, G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - 'vector<string,allocator<string> >::size_type' 0 - n u 'string' - 11 'string()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__dict_173_0_15, 105, G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__dict_173_0_16, 105, G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - first u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_173_0_17, 117, G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__dict_173_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__dict_173_0_19, 117, G__get_linked_tagnum(&G__dictLN_string), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__dict_173_0_20, 117, G__get_linked_tagnum(&G__dictLN_string), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__dict_173_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_173_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_173_0_23, 117, G__get_linked_tagnum(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - position u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_173_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - position u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - first "
"u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_173_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - position h - 'vector<string,allocator<string> >::size_type' 0 - n "
"u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__dict_173_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_173_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_173_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - first u 'vector<string,allocator<string> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_173_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<string,allocator<string> >", 3392, G__dict_173_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncdict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaldict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcdict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator = { "vector<unsigned short,allocator<unsigned short> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned short,allocator<unsigned short> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR = { "vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator = { "vector<string,allocator<string> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabledict() {
  G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_string.tagnum = -1 ;
  G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabledict() {

   /* Setting up class,struct,union tag entry */
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_string);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),sizeof(vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),sizeof(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgR),sizeof(vector<string,allocator<string> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEstringcOallocatorlEstringgRsPgR,G__setup_memfuncvectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupdict(void) {
  G__check_setup_version(30051515,"G__cpp_setupdict()");
  G__set_cpp_environmentdict();
  G__cpp_setup_tagtabledict();

  G__cpp_setup_inheritancedict();

  G__cpp_setup_typetabledict();

  G__cpp_setup_memvardict();

  G__cpp_setup_memfuncdict();
  G__cpp_setup_globaldict();
  G__cpp_setup_funcdict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncdict();
  return;
}
class G__cpp_setup_initdict {
  public:
    G__cpp_setup_initdict() { G__add_setup_func("dict",(G__incsetup)(&G__cpp_setupdict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initdict() { G__remove_setup_func("dict"); }
};
G__cpp_setup_initdict G__cpp_setup_initializerdict;

