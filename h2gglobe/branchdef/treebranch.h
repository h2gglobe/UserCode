void Branch_pho_ncrys(TTree * tree) { tree->Branch("pho_ncrys",&pho_ncrys, "pho_ncrys[pho_n]/I");  }; 

void Branch_pfcand_n(TTree * tree) { tree->Branch("pfcand_n",&pfcand_n, "pfcand_n/I");  }; 
void Branch_pfcand_p4(TTree * tree) { tree->Branch("pfcand_p4", "TClonesArray",&pfcand_p4, 32000, 0); }; 
void Branch_pfcand_posvtx(TTree * tree) { tree->Branch("pfcand_posvtx", "TClonesArray",&pfcand_posvtx, 32000, 0); }; 
void Branch_pfcand_pdgid(TTree * tree) { tree->Branch("pfcand_pdgid",&pfcand_pdgid, "pfcand_pdgid[pfcand_n]/I");  };


void Branch_event(TTree * tree) { tree->Branch("event",&event, "event/I");  }; 
void Branch_run(TTree * tree) { tree->Branch("run",&run, "run/I");  }; 
void Branch_process_id(TTree * tree) { tree->Branch("process_id",&process_id, "process_id/I");  }; 
void Branch_lumis(TTree * tree) { tree->Branch("lumis",&lumis, "lumis/I");  }; 
void Branch_bx(TTree * tree) { tree->Branch("bx",&bx, "bx/I");  }; 
void Branch_pthat(TTree * tree) { tree->Branch("pthat",&pthat, "pthat/F");  }; 
void Branch_weight(TTree * tree) { tree->Branch("weight",&weight, "weight/F");  }; 
void Branch_ct_n(TTree * tree) { tree->Branch("ct_n",&ct_n, "ct_n/I");  }; 
void Branch_ct_p4(TTree * tree) { tree->Branch("ct_p4", "TClonesArray",&ct_p4, 32000, 0); }; 
void Branch_ct_emEnergy(TTree * tree) { tree->Branch("ct_emEnergy",&ct_emEnergy, "ct_emEnergy[ct_n]/F");  }; 
void Branch_ct_hadEnergy(TTree * tree) { tree->Branch("ct_hadEnergy",&ct_hadEnergy, "ct_hadEnergy[ct_n]/F");  }; 
void Branch_ct_outerEnergy(TTree * tree) { tree->Branch("ct_outerEnergy",&ct_outerEnergy, "ct_outerEnergy[ct_n]/F");  }; 
void Branch_ct_emL1(TTree * tree) { tree->Branch("ct_emL1",&ct_emL1, "ct_emL1[ct_n]/I");  }; 
void Branch_ct_hadL1(TTree * tree) { tree->Branch("ct_hadL1",&ct_hadL1, "ct_hadL1[ct_n]/I");  }; 
void Branch_ct_size(TTree * tree) { tree->Branch("ct_size",&ct_size, "ct_size[ct_n]/I");  }; 
void Branch_sc_islbar_n(TTree * tree) { tree->Branch("sc_islbar_n",&sc_islbar_n, "sc_islbar_n/I");  }; 
void Branch_sc_islbar_p4(TTree * tree) { tree->Branch("sc_islbar_p4", "TClonesArray",&sc_islbar_p4, 32000, 0); }; 
void Branch_sc_islbar_xyz(TTree * tree) { tree->Branch("sc_islbar_xyz", "TClonesArray",&sc_islbar_xyz, 32000, 0); }; 
void Branch_sc_islbar_raw(TTree * tree) { tree->Branch("sc_islbar_raw",&sc_islbar_raw, "sc_islbar_raw[sc_islbar_n]/F");  }; 
void Branch_sc_islbar_nbc(TTree * tree) { tree->Branch("sc_islbar_nbc",&sc_islbar_nbc, "sc_islbar_nbc[sc_islbar_n]/I");  }; 
void Branch_sc_islbar_seedenergy(TTree * tree) { tree->Branch("sc_islbar_seedenergy",&sc_islbar_seedenergy,"sc_islbar_seedenergy[sc_islbar_n]/F" );  }; 
void Branch_sc_islbar_bcseedind(TTree * tree) { tree->Branch("sc_islbar_bcseedind",&sc_islbar_bcseedind, "sc_islbar_bcseedind[sc_islbar_n]/I");  }; 
void Branch_sc_islbar_bcind(TTree * tree) { tree->Branch("sc_islbar_bcind",&sc_islbar_bcind, "sc_islbar_bcind[sc_islbar_n][35]/I");  }; 
void Branch_sc_n(TTree * tree) { tree->Branch("sc_n",&sc_n, "sc_n/I");  }; 
void Branch_sc_islend_n(TTree * tree) { tree->Branch("sc_islend_n",&sc_islend_n, "sc_islend_n/I");  }; 
void Branch_sc_hybrid_n(TTree * tree) { tree->Branch("sc_hybrid_n",&sc_hybrid_n, "sc_hybrid_n/I");  }; 
void Branch_sc_p4(TTree * tree) { tree->Branch("sc_p4", "TClonesArray",&sc_p4, 32000, 0); }; 
void Branch_sc_xyz(TTree * tree) { tree->Branch("sc_xyz", "TClonesArray",&sc_xyz, 32000, 0); }; 
void Branch_sc_pre(TTree * tree) { tree->Branch("sc_pre",&sc_pre, "sc_pre[sc_n]/F");  }; 
void Branch_sc_raw(TTree * tree) { tree->Branch("sc_raw",&sc_raw, "sc_raw[sc_n]/F");  }; 
void Branch_sc_barrel(TTree * tree) { tree->Branch("sc_barrel",&sc_barrel, "sc_barrel[sc_n]/I");  }; 
void Branch_sc_2xN(TTree * tree) { tree->Branch("sc_2xN",&sc_2xN, "sc_2xN[sc_n]/F");  }; 
void Branch_sc_5xN(TTree * tree) { tree->Branch("sc_5xN",&sc_5xN, "sc_5xN[sc_n]/F");  }; 
void Branch_sc_sieie(TTree * tree) { tree->Branch("sc_sieie",&sc_sieie, "sc_sieie[sc_n]/F");  }; 
void Branch_sc_nbc(TTree * tree) { tree->Branch("sc_nbc",&sc_nbc, "sc_nbc[sc_n]/I");  }; 
void Branch_sc_bcseedind(TTree * tree) { tree->Branch("sc_bcseedind",&sc_bcseedind, "sc_bcseedind[sc_n]/I");  }; 
void Branch_sc_bcind(TTree * tree) { tree->Branch("sc_bcind",&sc_bcind, "sc_bcind[sc_n][35]/I");  }; 
void Branch_sc_seta(TTree * tree) { tree->Branch("sc_seta",&sc_seta, "sc_seta[sc_n]/F");  }; 
void Branch_sc_sphi(TTree * tree) { tree->Branch("sc_sphi",&sc_sphi, "sc_sphi[sc_n]/F");  }; 
void Branch_bc_n(TTree * tree) { tree->Branch("bc_n",&bc_n, "bc_n/I");  }; 
void Branch_bc_islbar_n(TTree * tree) { tree->Branch("bc_islbar_n",&bc_islbar_n, "bc_islbar_n/I");  }; 
void Branch_bc_islend_n(TTree * tree) { tree->Branch("bc_islend_n",&bc_islend_n, "bc_islend_n/I");  }; 
void Branch_bc_hybrid_n(TTree * tree) { tree->Branch("bc_hybrid_n",&bc_hybrid_n, "bc_hybrid_n/I");  }; 
void Branch_bc_p4(TTree * tree) { tree->Branch("bc_p4", "TClonesArray",&bc_p4, 32000, 0); }; 
void Branch_bc_xyz(TTree * tree) { tree->Branch("bc_xyz", "TClonesArray",&bc_xyz, 32000, 0); }; 
void Branch_bc_nhits(TTree * tree) { tree->Branch("bc_nhits",&bc_nhits,"bc_nhits[bc_n]/I");  }; 
void Branch_bc_s1(TTree * tree) { tree->Branch("bc_s1",&bc_s1, "bc_s1[bc_n]/F");  }; 
void Branch_bc_rook(TTree * tree) { tree->Branch("bc_rook",&bc_rook, "bc_rook[bc_n]/F");  }; 
void Branch_bc_chx(TTree * tree) { tree->Branch("bc_chx",&bc_chx, "bc_chx[bc_n]/F");  }; 
void Branch_bc_s4(TTree * tree) { tree->Branch("bc_s4",&bc_s4, "bc_s4[bc_n]/F");  }; 
void Branch_bc_s9(TTree * tree) { tree->Branch("bc_s9",&bc_s9, "bc_s9[bc_n]/F");  }; 
void Branch_bc_s25(TTree * tree) { tree->Branch("bc_s25",&bc_s25, "bc_s25[bc_n]/F");  }; 
void Branch_bc_spp(TTree * tree) { tree->Branch("bc_spp",&bc_spp, "bc_spp[bc_n]/F");  }; 
void Branch_bc_see(TTree * tree) { tree->Branch("bc_see",&bc_see, "bc_see[bc_n]/F");  }; 
void Branch_bc_sep(TTree * tree) { tree->Branch("bc_sep",&bc_sep, "bc_sep[bc_n]/F");  }; 
void Branch_bc_type(TTree * tree) { tree->Branch("bc_type",&bc_type, "bc_type[bc_n]/I");  }; 
void Branch_bc_sieie(TTree * tree) { tree->Branch("bc_sieie",&bc_sieie, "bc_sieie[bc_n]/F");  }; 
void Branch_bc_seed(TTree * tree) { tree->Branch("bc_seed",&bc_seed, "bc_seed[bc_n]/I");  }; 
void Branch_ecalhit_n(TTree * tree) { tree->Branch("ecalhit_n",&ecalhit_n, "ecalhit_n/I");  }; 
void Branch_ecalhit_type(TTree * tree) { tree->Branch("ecalhit_type",&ecalhit_type, "ecalhit_type[ecalhit_n]/S");  }; 
void Branch_ecalhit_flag(TTree * tree) { tree->Branch("ecalhit_flag",&ecalhit_flag, "ecalhit_flag[ecalhit_n]/S");  }; 
void Branch_ecalhit_time(TTree * tree) { tree->Branch("ecalhit_time",&ecalhit_time, "ecalhit_time[ecalhit_n]/F");  }; 
void Branch_ecalhit_detid(TTree * tree) { tree->Branch("ecalhit_detid",&ecalhit_detid, "ecalhit_detid[ecalhit_n]/I");  }; 
void Branch_ecalhit_p4(TTree * tree) { tree->Branch("ecalhit_p4", "TClonesArray",&ecalhit_p4, 32000, 0); }; 
void Branch_el_std_n(TTree * tree) { tree->Branch("el_std_n",&el_std_n, "el_std_n/I"); }; 
void Branch_el_std_sc(TTree * tree) { tree->Branch("el_std_sc", "TClonesArray",&el_std_sc, 32000, 0); }; 
void Branch_el_std_p4(TTree * tree) { tree->Branch("el_std_p4", "TClonesArray",&el_std_p4, 32000, 0); }; 
void Branch_el_std_momvtx(TTree * tree) { tree->Branch("el_std_momvtx", "TClonesArray",&el_std_momvtx, 32000, 0); }; 
void Branch_el_std_momvtxconst(TTree * tree) { tree->Branch("el_std_momvtxconst", "TClonesArray",&el_std_momvtxconst, 32000, 0); }; 
void Branch_el_std_momcalo(TTree * tree) { tree->Branch("el_std_momcalo", "TClonesArray",&el_std_momcalo, 32000, 0); }; 
void Branch_el_std_momout(TTree * tree) { tree->Branch("el_std_momout", "TClonesArray",&el_std_momout, 32000, 0); }; 
void Branch_el_std_posvtx(TTree * tree) { tree->Branch("el_std_posvtx", "TClonesArray",&el_std_posvtx, 32000, 0); }; 
void Branch_el_std_poscalo(TTree * tree) { tree->Branch("el_std_poscalo", "TClonesArray",&el_std_poscalo, 32000, 0); }; 
void Branch_el_std_eopin(TTree * tree) { tree->Branch("el_std_eopin",&el_std_eopin, "el_std_eopin[el_std_n]/F"); }; 
void Branch_el_std_eseedopout(TTree * tree) { tree->Branch("el_std_eseedopout",&el_std_eseedopout, "el_std_eseedopout[el_std_n]/F"); }; 
void Branch_el_std_pout(TTree * tree) { tree->Branch("el_std_pout",&el_std_pout, "el_std_pout[el_std_n]/F"); }; 
void Branch_el_std_pin(TTree * tree) { tree->Branch("el_std_pin",&el_std_pin, "el_std_pin[el_std_n]/F"); }; 
void Branch_el_std_e1x5(TTree * tree) { tree->Branch("el_std_e1x5",&el_std_e1x5, "el_std_e1x5[el_std_n]/F"); }; 
void Branch_el_std_e5x5(TTree * tree) { tree->Branch("el_std_e5x5",&el_std_e5x5, "el_std_e5x5[el_std_n]/F"); }; 
void Branch_el_std_e2x5(TTree * tree) { tree->Branch("el_std_e2x5",&el_std_e2x5, "el_std_e2x5[el_std_n]/F"); }; 
void Branch_el_std_spp(TTree * tree) { tree->Branch("el_std_spp",&el_std_spp, "el_std_spp[el_std_n]/F"); }; 
void Branch_el_std_see(TTree * tree) { tree->Branch("el_std_see",&el_std_see, "el_std_see[el_std_n]/F"); }; 
void Branch_el_std_sieie(TTree * tree) { tree->Branch("el_std_sieie",&el_std_sieie, "el_std_sieie[el_std_n]/F"); }; 
void Branch_el_std_sieiesc(TTree * tree) { tree->Branch("el_std_sieiesc",&el_std_sieiesc, "el_std_sieiesc[el_std_n]/F"); }; 
void Branch_el_std_eseed(TTree * tree) { tree->Branch("el_std_eseed",&el_std_eseed, "el_std_eseed[el_std_n]/F"); }; 
void Branch_el_std_enearbcopin(TTree * tree) { tree->Branch("el_std_enearbcopin",&el_std_enearbcopin, "el_std_enearbcopin[el_std_n]/F"); }; 
void Branch_el_std_eseedopin(TTree * tree) { tree->Branch("el_std_eseedopin",&el_std_eseedopin, "el_std_eseedopin[el_std_n]/F"); }; 
void Branch_el_std_fbrem(TTree * tree) { tree->Branch("el_std_fbrem",&el_std_fbrem, "el_std_fbrem[el_std_n]/F"); }; 
void Branch_el_std_nbrem(TTree * tree) { tree->Branch("el_std_nbrem",&el_std_nbrem, "el_std_nbrem[el_std_n]/I"); }; 
void Branch_el_std_hoe(TTree * tree) { tree->Branch("el_std_hoe",&el_std_hoe, "el_std_hoe[el_std_n]/F"); }; 
void Branch_el_std_hoed1(TTree * tree) { tree->Branch("el_std_hoed1",&el_std_hoed1, "el_std_hoed1[el_std_n]/F"); }; 
void Branch_el_std_hoed2(TTree * tree) { tree->Branch("el_std_hoed2",&el_std_hoed2, "el_std_hoed2[el_std_n]/F"); }; 
void Branch_el_std_detain(TTree * tree) { tree->Branch("el_std_detain",&el_std_detain, "el_std_detain[el_std_n]/F"); }; 
void Branch_el_std_dphiin(TTree * tree) { tree->Branch("el_std_dphiin",&el_std_dphiin, "el_std_dphiin[el_std_n]/F"); }; 
void Branch_el_std_detaout(TTree * tree) { tree->Branch("el_std_detaout",&el_std_detaout, "el_std_detaout[el_std_n]/F"); }; 
void Branch_el_std_dphiout(TTree * tree) { tree->Branch("el_std_dphiout",&el_std_dphiout, "el_std_dphiout[el_std_n]/F"); }; 
void Branch_el_std_class(TTree * tree) { tree->Branch("el_std_class",&el_std_class, "el_std_class[el_std_n]/I"); }; 
void Branch_el_std_crack(TTree * tree) { tree->Branch("el_std_crack",&el_std_crack, "el_std_crack[el_std_n]/I"); }; 
void Branch_el_std_nambtk(TTree * tree) { tree->Branch("el_std_nambtk",&el_std_nambtk, "el_std_nambtk[el_std_n]/I"); }; 
void Branch_el_std_scind(TTree * tree) { tree->Branch("el_std_scind",&el_std_scind, "el_std_scind[el_std_n]/I"); }; 
void Branch_el_std_z0(TTree * tree) { tree->Branch("el_std_z0",&el_std_z0, "el_std_z0[el_std_n]/F"); }; 
void Branch_el_std_d0(TTree * tree) { tree->Branch("el_std_d0",&el_std_d0, "el_std_d0[el_std_n]/F"); }; 
void Branch_el_std_D0Vtx(TTree * tree) { tree->Branch("el_std_D0Vtx",&el_std_D0Vtx,"el_std_D0Vtx[el_std_n][100]/F");  }; 
void Branch_el_std_DZVtx(TTree * tree) { tree->Branch("el_std_DZVtx",&el_std_DZVtx,"el_std_DZVtx[el_std_n][100]/F");  }; 
void Branch_el_std_qoverperr(TTree * tree) { tree->Branch("el_std_qoverperr",&el_std_qoverperr, "el_std_qoverperr[el_std_n]/F"); }; 
void Branch_el_std_pterr(TTree * tree) { tree->Branch("el_std_pterr",&el_std_pterr, "el_std_pterr[el_std_n]/F"); }; 
void Branch_el_std_etaerr(TTree * tree) { tree->Branch("el_std_etaerr",&el_std_etaerr, "el_std_etaerr[el_std_n]/F"); }; 
void Branch_el_std_phierr(TTree * tree) { tree->Branch("el_std_phierr",&el_std_phierr, "el_std_phierr[el_std_n]/F"); }; 
void Branch_el_std_z0err(TTree * tree) { tree->Branch("el_std_z0err",&el_std_z0err, "el_std_z0err[el_std_n]/F"); }; 
void Branch_el_std_d0err(TTree * tree) { tree->Branch("el_std_d0err",&el_std_d0err, "el_std_d0err[el_std_n]/F"); }; 
void Branch_el_std_chi2(TTree * tree) { tree->Branch("el_std_chi2",&el_std_chi2, "el_std_chi2[el_std_n]/F"); }; 
void Branch_el_std_dof(TTree * tree) { tree->Branch("el_std_dof",&el_std_dof, "el_std_dof[el_std_n]/F"); }; 
void Branch_el_std_mva(TTree * tree) { tree->Branch("el_std_mva",&el_std_mva, "el_std_mva[el_std_n]/F"); }; 
void Branch_el_std_mva_trig(TTree * tree) { tree->Branch("el_std_mva_trig",&el_std_mva_trig, "el_std_mva_trig[el_std_n]/F"); }; 
void Branch_el_std_mva_nontrig(TTree * tree) { tree->Branch("el_std_mva_nontrig",&el_std_mva_nontrig, "el_std_mva_nontrig[el_std_n]/F"); }; 
void Branch_el_std_ch_gsf(TTree * tree) { tree->Branch("el_std_ch_gsf",&el_std_ch_gsf, "el_std_ch_gsf[el_std_n]/I"); }; 
void Branch_el_std_ch_scpix(TTree * tree) { tree->Branch("el_std_ch_scpix",&el_std_ch_scpix, "el_std_ch_scpix[el_std_n]/I"); }; 
void Branch_el_std_charge(TTree * tree) { tree->Branch("el_std_charge",&el_std_charge, "el_std_charge[el_std_n]/I"); }; 
void Branch_el_std_losthits(TTree * tree) { tree->Branch("el_std_losthits",&el_std_losthits, "el_std_losthits[el_std_n]/I"); }; 
void Branch_el_std_validhits(TTree * tree) { tree->Branch("el_std_validhits",&el_std_validhits, "el_std_validhits[el_std_n]/I"); }; 
void Branch_el_std_hp_expin(TTree * tree) { tree->Branch("el_std_hp_expin",&el_std_hp_expin, "el_std_hp_expin[el_std_n]/I"); }; 
void Branch_el_std_hp_expout(TTree * tree) { tree->Branch("el_std_hp_expout",&el_std_hp_expout, "el_std_hp_expout[el_std_n]/I"); }; 
void Branch_el_std_rohighe(TTree * tree) { tree->Branch("el_std_rohighe",&el_std_rohighe, "el_std_rohighe[el_std_n]/I"); }; 
void Branch_el_std_roloose(TTree * tree) { tree->Branch("el_std_roloose",&el_std_roloose, "el_std_roloose[el_std_n]/I"); }; 
void Branch_el_std_rotight(TTree * tree) { tree->Branch("el_std_rotight",&el_std_rotight, "el_std_rotight[el_std_n]/I"); }; 
void Branch_el_std_loose(TTree * tree) { tree->Branch("el_std_loose",&el_std_loose, "el_std_loose[el_std_n]/I"); }; 
void Branch_el_std_tight(TTree * tree) { tree->Branch("el_std_tight",&el_std_tight, "el_std_tight[el_std_n]/I"); }; 
void Branch_el_std_catbased(TTree * tree) { tree->Branch("el_std_catbased", "std::vector<std::vector<int> >", &el_std_catbased); }; 
void Branch_el_std_tkind(TTree * tree) { tree->Branch("el_std_tkind",&el_std_tkind, "el_std_tkind[el_std_n]/I"); }; 
void Branch_el_std_hcaliso03(TTree * tree) { tree->Branch("el_std_hcaliso03",&el_std_hcaliso03, "el_std_hcaliso03[el_std_n]/F"); }; 
void Branch_el_std_ecaliso03(TTree * tree) { tree->Branch("el_std_ecaliso03",&el_std_ecaliso03, "el_std_ecaliso03[el_std_n]/F"); }; 
void Branch_el_std_tkiso03(TTree * tree) { tree->Branch("el_std_tkiso03",&el_std_tkiso03, "el_std_tkiso03[el_std_n]/F"); }; 
void Branch_el_std_hcaliso04(TTree * tree) { tree->Branch("el_std_hcaliso04",&el_std_hcaliso04, "el_std_hcaliso04[el_std_n]/F"); }; 
void Branch_el_std_ecaliso04(TTree * tree) { tree->Branch("el_std_ecaliso04",&el_std_ecaliso04, "el_std_ecaliso04[el_std_n]/F"); }; 
void Branch_el_std_tkiso04(TTree * tree) { tree->Branch("el_std_tkiso04",&el_std_tkiso04, "el_std_tkiso04[el_std_n]/F"); }; 
void Branch_el_std_tkdrv(TTree * tree) { tree->Branch("el_std_tkdrv",&el_std_tkdrv, "el_std_tkdrv[el_std_n]/O"); }; 
void Branch_el_std_ecaldrv(TTree * tree) { tree->Branch("el_std_ecaldrv",&el_std_ecaldrv, "el_std_ecaldrv[el_std_n]/O"); }; 
void Branch_el_std_ip_ctf(TTree * tree) { tree->Branch("el_std_ip_ctf",&el_std_ip_ctf, "el_std_ip_ctf[el_std_n]/F"); }; 
void Branch_el_std_ip_gsf(TTree * tree) { tree->Branch("el_std_ip_gsf",&el_std_ip_gsf, "el_std_ip_gsf[el_std_n]/F"); }; 
void Branch_el_std_dist(TTree * tree) { tree->Branch("el_std_dist",&el_std_dist, "el_std_dist[el_std_n]/F"); }; 
void Branch_el_std_dcot(TTree * tree) { tree->Branch("el_std_dcot",&el_std_dcot, "el_std_dcot[el_std_n]/F"); }; 
void Branch_el_std_hp_1pxb(TTree * tree) { tree->Branch("el_std_hp_1pxb",&el_std_1pxb, "el_std_hp_1pxb[el_std_n]/I"); }; 
void Branch_el_std_hp_1pxf(TTree * tree) { tree->Branch("el_std_hp_1pxf",&el_std_1pxf, "el_std_hp_1pxf[el_std_n]/I"); }; 
void Branch_gp_n(TTree * tree) { tree->Branch("gp_n",&gp_n, "gp_n/I");  }; 
void Branch_gp_p4(TTree * tree) { tree->Branch("gp_p4", "TClonesArray",&gp_p4, 32000, 0); }; 
void Branch_gp_vtx(TTree * tree) { tree->Branch("gp_vtx", "TClonesArray",&gp_vtx, 32000, 0); }; 
void Branch_gp_status(TTree * tree) { tree->Branch("gp_status",&gp_status, "gp_status[gp_n]/S");  }; 
void Branch_gp_pdgid(TTree * tree) { tree->Branch("gp_pdgid",&gp_pdgid, "gp_pdgid[gp_n]/S");  }; 
void Branch_gp_mother(TTree * tree) { tree->Branch("gp_mother",&gp_mother, "gp_mother[gp_n]/S");  }; 
void Branch_genjet_algo1_n(TTree * tree) { tree->Branch("genjet_algo1_n",&genjet_algo1_n, "genjet_algo1_n/I"); }; 
void Branch_genjet_algo1_p4(TTree * tree) { tree->Branch("genjet_algo1_p4", "TClonesArray",&genjet_algo1_p4, 32000, 0); }; 
void Branch_genjet_algo1_em(TTree * tree) { tree->Branch("genjet_algo1_em",&genjet_algo1_em, "genjet_algo1_em[genjet_algo1_n]/F"); }; 
void Branch_genjet_algo1_had(TTree * tree) { tree->Branch("genjet_algo1_had",&genjet_algo1_had, "genjet_algo1_had[genjet_algo1_n]/F"); }; 
void Branch_genjet_algo1_inv(TTree * tree) { tree->Branch("genjet_algo1_inv",&genjet_algo1_inv, "genjet_algo1_inv[genjet_algo1_n]/F"); }; 
void Branch_genjet_algo1_aux(TTree * tree) { tree->Branch("genjet_algo1_aux",&genjet_algo1_aux, "genjet_algo1_aux[genjet_algo1_n]/F"); }; 
void Branch_genjet_algo2_n(TTree * tree) { tree->Branch("genjet_algo2_n",&genjet_algo2_n, "genjet_algo2_n/I"); }; 
void Branch_genjet_algo2_p4(TTree * tree) { tree->Branch("genjet_algo2_p4", "TClonesArray",&genjet_algo2_p4, 32000, 0); }; 
void Branch_genjet_algo2_em(TTree * tree) { tree->Branch("genjet_algo2_em",&genjet_algo2_em, "genjet_algo2_em[genjet_algo2_n]/F"); }; 
void Branch_genjet_algo2_had(TTree * tree) { tree->Branch("genjet_algo2_had",&genjet_algo2_had, "genjet_algo2_had[genjet_algo2_n]/F"); }; 
void Branch_genjet_algo2_inv(TTree * tree) { tree->Branch("genjet_algo2_inv",&genjet_algo2_inv, "genjet_algo2_inv[genjet_algo2_n]/F"); }; 
void Branch_genjet_algo2_aux(TTree * tree) { tree->Branch("genjet_algo2_aux",&genjet_algo2_aux, "genjet_algo2_aux[genjet_algo2_n]/F"); }; 
void Branch_genjet_algo3_n(TTree * tree) { tree->Branch("genjet_algo3_n",&genjet_algo3_n, "genjet_algo3_n/I"); }; 
void Branch_genjet_algo3_p4(TTree * tree) { tree->Branch("genjet_algo3_p4", "TClonesArray",&genjet_algo3_p4, 32000, 0); }; 
void Branch_genjet_algo3_em(TTree * tree) { tree->Branch("genjet_algo3_em",&genjet_algo3_em, "genjet_algo3_em[genjet_algo3_n]/F"); }; 
void Branch_genjet_algo3_had(TTree * tree) { tree->Branch("genjet_algo3_had",&genjet_algo3_had, "genjet_algo3_had[genjet_algo3_n]/F"); }; 
void Branch_genjet_algo3_inv(TTree * tree) { tree->Branch("genjet_algo3_inv",&genjet_algo3_inv, "genjet_algo3_inv[genjet_algo3_n]/F"); }; 
void Branch_genjet_algo3_aux(TTree * tree) { tree->Branch("genjet_algo3_aux",&genjet_algo3_aux, "genjet_algo3_aux[genjet_algo3_n]/F"); }; 
void Branch_hc_p4(TTree * tree) { tree->Branch("hc_p4", "TClonesArray",&hc_p4, 32000, 0); }; 
void Branch_hc_n(TTree * tree) { tree->Branch("hc_n",&hc_n, "hc_n/I");  }; 
void Branch_hc_type(TTree * tree) { tree->Branch("hc_type",&hc_type, "hc_type[hc_n]/I");  }; 
void Branch_hlt_bit(TTree * tree) { tree->Branch("hlt_bit", "std::vector<unsigned short>", &hlt_bit); }; 
void Branch_hlt_path_names_HLT(TTree * tree) { tree->Branch("hlt_path_names_HLT", "std::vector<std::string>", &hlt_path_names_HLT); }; 
void Branch_hlt1_bit(TTree * tree) { tree->Branch("hlt1_bit", "std::vector<unsigned short>", &hlt1_bit); }; 
void Branch_hlt_path_names_HLT1(TTree * tree) { tree->Branch("hlt_path_names_HLT1", "std::vector<std::string>", &hlt_path_names_HLT1); }; 
void Branch_hlt2_bit(TTree * tree) { tree->Branch("hlt2_bit", "std::vector<unsigned short>", &hlt2_bit); }; 
void Branch_hlt_path_names_HLT2(TTree * tree) { tree->Branch("hlt_path_names_HLT2", "std::vector<std::string>", &hlt_path_names_HLT2); }; 
void Branch_hlt_n(TTree * tree) { tree->Branch("hlt_n",&hlt_n, "hlt_n/I");  }; 
void Branch_hlt_p4(TTree * tree) { tree->Branch("hlt_p4", "TClonesArray",&hlt_p4, 32000, 0); }; 
void Branch_hlt_candpath(TTree * tree) { tree->Branch("hlt_candpath", "std::vector<std::vector<unsigned short> >", &hlt_candpath); }; 
void Branch_ht_25(TTree * tree) { tree->Branch("ht_25",&ht_25, "ht_25/F");  }; 
void Branch_ht_35(TTree * tree) { tree->Branch("ht_35",&ht_35, "ht_35/F");  }; 
void Branch_ht_50(TTree * tree) { tree->Branch("ht_50",&ht_50, "ht_50/F");  }; 
void Branch_rho_algo1(TTree * tree) { tree->Branch("rho_algo1",&rho_algo1, "rho_algo1/F");  }; 
void Branch_rho_algo2(TTree * tree) { tree->Branch("rho_algo2",&rho_algo2, "rho_algo2/F");  }; 
void Branch_rho_algo3(TTree * tree) { tree->Branch("rho_algo3",&rho_algo3, "rho_algo3/F");  }; 
void Branch_ht_nomet25(TTree * tree) { tree->Branch("ht_nomet25",&ht_nomet25, "ht_nomet25/F");  }; 
void Branch_ht_nomet35(TTree * tree) { tree->Branch("ht_nomet35",&ht_nomet35, "ht_nomet35/F");  }; 
void Branch_ht_nomet50(TTree * tree) { tree->Branch("ht_nomet50",&ht_nomet50, "ht_nomet50/F");  }; 
void Branch_ht_trk(TTree * tree) { tree->Branch("ht_trk",&ht_trk, "ht_trk/F");  }; 
void Branch_ht_trkvec(TTree * tree) { tree->Branch("ht_trkvec","TVector3",&ht_trkvec,32000,0); }; 
void Branch_ht_2lpt_n(TTree * tree) { tree->Branch("ht_2lpt_n",&ht_2lpt_n, "ht_2lpt_n/I");  }; 
void Branch_ht_2lpt_inds(TTree * tree) { tree->Branch("ht_2lpt_inds",&ht_2lpt_inds, "ht_2lpt_inds[ht_2lpt_n][2]/I");  }; 
void Branch_ht_4lpt_n(TTree * tree) { tree->Branch("ht_4lpt_n",&ht_4lpt_n, "ht_4lpt_n/I");  }; 
void Branch_ht_4lpt_inds(TTree * tree) { tree->Branch("ht_4lpt_inds",&ht_4lpt_inds, "ht_4lpt_inds[ht_4lpt_n][4]/I");  }; 
void Branch_ht_2lpt25(TTree * tree) { tree->Branch("ht_2lpt25",&ht_2lpt25, "ht_2lpt25[ht_2lpt_n]/F");  }; 
void Branch_ht_2lpt35(TTree * tree) { tree->Branch("ht_2lpt35",&ht_2lpt35, "ht_2lpt35[ht_2lpt_n]/F");  }; 
void Branch_ht_2lpt50(TTree * tree) { tree->Branch("ht_2lpt50",&ht_2lpt50, "ht_2lpt50[ht_2lpt_n]/F");  }; 
void Branch_ht_4lpt25(TTree * tree) { tree->Branch("ht_4lpt25",&ht_4lpt25, "ht_4lpt25[ht_4lpt_n]/F");  }; 
void Branch_ht_4lpt35(TTree * tree) { tree->Branch("ht_4lpt35",&ht_4lpt35, "ht_4lpt35[ht_4lpt_n]/F");  }; 
void Branch_ht_4lpt50(TTree * tree) { tree->Branch("ht_4lpt50",&ht_4lpt50, "ht_4lpt50[ht_4lpt_n]/F");  }; 
void Branch_jet_algo1_n(TTree * tree) { tree->Branch("jet_algo1_n",&jet_algo1_n, "jet_algo1_n/I"); }; 
void Branch_jet_algo1_p4(TTree * tree) { tree->Branch("jet_algo1_p4", "TClonesArray",&jet_algo1_p4, 32000, 0); }; 
void Branch_jet_algo1_emfrac(TTree * tree) { tree->Branch("jet_algo1_emfrac",&jet_algo1_emfrac, "jet_algo1_emfrac[jet_algo1_n]/F"); }; 
void Branch_jet_algo1_hadfrac(TTree * tree) { tree->Branch("jet_algo1_hadfrac",&jet_algo1_hadfrac, "jet_algo1_hadfrac[jet_algo1_n]/F"); }; 
void Branch_jet_algo1_ntk(TTree * tree) { tree->Branch("jet_algo1_ntk",&jet_algo1_ntk, "jet_algo1_ntk[jet_algo1_n]/I"); }; 
void Branch_jet_algo1_tkind(TTree * tree) { tree->Branch("jet_algo1_tkind", "std::vector<std::vector<unsigned short> >", &jet_algo1_tkind); }; 
void Branch_jet_algo1_calotwind(TTree * tree) { tree->Branch("jet_algo1_calotwind", "std::vector<std::vector<unsigned short> >", &jet_algo1_calotwind); }; 
void Branch_jet_algo2_n(TTree * tree) { tree->Branch("jet_algo2_n",&jet_algo2_n, "jet_algo2_n/I"); }; 
void Branch_jet_algo2_p4(TTree * tree) { tree->Branch("jet_algo2_p4", "TClonesArray",&jet_algo2_p4, 32000, 0); }; 
void Branch_jet_algo2_emfrac(TTree * tree) { tree->Branch("jet_algo2_emfrac",&jet_algo2_emfrac, "jet_algo2_emfrac[jet_algo2_n]/F"); }; 
void Branch_jet_algo2_hadfrac(TTree * tree) { tree->Branch("jet_algo2_hadfrac",&jet_algo2_hadfrac, "jet_algo2_hadfrac[jet_algo2_n]/F"); }; 
void Branch_jet_algo2_ntk(TTree * tree) { tree->Branch("jet_algo2_ntk",&jet_algo2_ntk, "jet_algo2_ntk[jet_algo2_n]/I"); }; 
void Branch_jet_algo2_tkind(TTree * tree) { tree->Branch("jet_algo2_tkind", "std::vector<std::vector<unsigned short> >", &jet_algo2_tkind); }; 
void Branch_jet_algo2_calotwind(TTree * tree) { tree->Branch("jet_algo2_calotwind", "std::vector<std::vector<unsigned short> >", &jet_algo2_calotwind); }; 
void Branch_jet_algo3_n(TTree * tree) { tree->Branch("jet_algo3_n",&jet_algo3_n, "jet_algo3_n/I"); }; 
void Branch_jet_algo3_p4(TTree * tree) { tree->Branch("jet_algo3_p4", "TClonesArray",&jet_algo3_p4, 32000, 0); }; 
void Branch_jet_algo3_emfrac(TTree * tree) { tree->Branch("jet_algo3_emfrac",&jet_algo3_emfrac, "jet_algo3_emfrac[jet_algo3_n]/F"); }; 
void Branch_jet_algo3_hadfrac(TTree * tree) { tree->Branch("jet_algo3_hadfrac",&jet_algo3_hadfrac, "jet_algo3_hadfrac[jet_algo3_n]/F"); }; 
void Branch_jet_algo3_ntk(TTree * tree) { tree->Branch("jet_algo3_ntk",&jet_algo3_ntk, "jet_algo3_ntk[jet_algo3_n]/I"); }; 
void Branch_jet_algo3_tkind(TTree * tree) { tree->Branch("jet_algo3_tkind", "std::vector<std::vector<unsigned short> >", &jet_algo3_tkind); }; 
void Branch_jet_algo3_calotwind(TTree * tree) { tree->Branch("jet_algo3_calotwind", "std::vector<std::vector<unsigned short> >", &jet_algo3_calotwind); }; 
void Branch_jet_algoPF1_n(TTree * tree) { tree->Branch("jet_algoPF1_n",&jet_algoPF1_n, "jet_algoPF1_n/I"); }; 
void Branch_jet_algoPF1_nvtx(TTree * tree) { tree->Branch("jet_algoPF1_nvtx",&jet_algoPF1_nvtx, "jet_algoPF1_nvtx/I"); }; 
void Branch_jet_algoPF1_p4(TTree * tree) { tree->Branch("jet_algoPF1_p4", "TClonesArray",&jet_algoPF1_p4, 32000, 0); }; 
void Branch_jet_algoPF1_emfrac(TTree * tree) { tree->Branch("jet_algoPF1_emfrac",&jet_algoPF1_emfrac, "jet_algoPF1_emfrac[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_hadfrac(TTree * tree) { tree->Branch("jet_algoPF1_hadfrac",&jet_algoPF1_hadfrac, "jet_algoPF1_hadfrac[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_erescale(TTree * tree) { tree->Branch("jet_algoPF1_erescale",&jet_algoPF1_erescale, "jet_algoPF1_erescale[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_ntk(TTree * tree) { tree->Branch("jet_algoPF1_ntk",&jet_algoPF1_ntk, "jet_algoPF1_ntk[jet_algoPF1_n]/I"); }; 
void Branch_jet_algoPF1_tkind(TTree * tree) { tree->Branch("jet_algoPF1_tkind", "std::vector<std::vector<unsigned short> >", &jet_algoPF1_tkind); }; 
void Branch_jet_algoPF1_calotwind(TTree * tree) { tree->Branch("jet_algoPF1_calotwind", "std::vector<std::vector<unsigned short> >", &jet_algoPF1_calotwind); }; 
void Branch_jet_algoPF1_beta(TTree * tree) { tree->Branch("jet_algoPF1_beta",&jet_algoPF1_beta, "jet_algoPF1_beta[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_betaStar(TTree * tree) { tree->Branch("jet_algoPF1_betaStar",&jet_algoPF1_betaStar, "jet_algoPF1_betaStar[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_betaStarClassic(TTree * tree) { tree->Branch("jet_algoPF1_betaStarClassic",&jet_algoPF1_betaStarClassic, "jet_algoPF1_betaStarClassic[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_dR2Mean(TTree * tree) { tree->Branch("jet_algoPF1_dR2Mean",&jet_algoPF1_dR2Mean, "jet_algoPF1_dR2Mean[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_dRMean(TTree * tree) { tree->Branch("jet_algoPF1_dRMean",&jet_algoPF1_dRMean, "jet_algoPF1_dRMean[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_dZ(TTree * tree) { tree->Branch("jet_algoPF1_dZ",&jet_algoPF1_dZ, "jet_algoPF1_dZ[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_frac01(TTree * tree) { tree->Branch("jet_algoPF1_frac01",&jet_algoPF1_frac01, "jet_algoPF1_frac01[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_frac02(TTree * tree) { tree->Branch("jet_algoPF1_frac02",&jet_algoPF1_frac02, "jet_algoPF1_frac02[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_frac03(TTree * tree) { tree->Branch("jet_algoPF1_frac03",&jet_algoPF1_frac03, "jet_algoPF1_frac03[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_frac04(TTree * tree) { tree->Branch("jet_algoPF1_frac04",&jet_algoPF1_frac04, "jet_algoPF1_frac04[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_frac05(TTree * tree) { tree->Branch("jet_algoPF1_frac05",&jet_algoPF1_frac05, "jet_algoPF1_frac05[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_full_mva(TTree * tree) { tree->Branch("jet_algoPF1_full_mva",&jet_algoPF1_full_mva, "jet_algoPF1_full_mva[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_simple_mva(TTree * tree) { tree->Branch("jet_algoPF1_simple_mva",&jet_algoPF1_simple_mva, "jet_algoPF1_simple_mva[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_nCharged(TTree * tree) { tree->Branch("jet_algoPF1_nCharged",&jet_algoPF1_nCharged, "jet_algoPF1_nCharged[jet_algoPF1_n]/I"); }; 
void Branch_jet_algoPF1_nNeutrals(TTree * tree) { tree->Branch("jet_algoPF1_nNeutrals",&jet_algoPF1_nNeutrals, "jet_algoPF1_nNeutrals[jet_algoPF1_n]/I"); }; 
void Branch_jet_algoPF1_full_wp_level(TTree * tree) { tree->Branch("jet_algoPF1_full_wp_level",&jet_algoPF1_full_wp_level, "jet_algoPF1_full_wp_level[jet_algoPF1_n]/I"); }; 
void Branch_jet_algoPF1_simple_wp_level(TTree * tree) { tree->Branch("jet_algoPF1_simple_wp_level",&jet_algoPF1_simple_wp_level, "jet_algoPF1_simple_wp_level[jet_algoPF1_n]/I"); }; 
void Branch_jet_algoPF2_n(TTree * tree) { tree->Branch("jet_algoPF2_n",&jet_algoPF2_n, "jet_algoPF2_n/I"); }; 
void Branch_jet_algoPF2_p4(TTree * tree) { tree->Branch("jet_algoPF2_p4", "TClonesArray",&jet_algoPF2_p4, 32000, 0); }; 
void Branch_jet_algoPF2_emfrac(TTree * tree) { tree->Branch("jet_algoPF2_emfrac",&jet_algoPF2_emfrac, "jet_algoPF2_emfrac[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_hadfrac(TTree * tree) { tree->Branch("jet_algoPF2_hadfrac",&jet_algoPF2_hadfrac, "jet_algoPF2_hadfrac[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_erescale(TTree * tree) { tree->Branch("jet_algoPF2_erescale",&jet_algoPF2_erescale, "jet_algoPF2_erescale[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_ntk(TTree * tree) { tree->Branch("jet_algoPF2_ntk",&jet_algoPF2_ntk, "jet_algoPF2_ntk[jet_algoPF2_n]/I"); }; 
void Branch_jet_algoPF2_tkind(TTree * tree) { tree->Branch("jet_algoPF2_tkind", "std::vector<std::vector<unsigned short> >", &jet_algoPF2_tkind); }; 
void Branch_jet_algoPF2_calotwind(TTree * tree) { tree->Branch("jet_algoPF2_calotwind", "std::vector<std::vector<unsigned short> >", &jet_algoPF2_calotwind); }; 
void Branch_jet_algoPF2_beta(TTree * tree) { tree->Branch("jet_algoPF2_beta",&jet_algoPF2_beta, "jet_algoPF2_beta[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_betaStar(TTree * tree) { tree->Branch("jet_algoPF2_betaStar",&jet_algoPF2_betaStar, "jet_algoPF2_betaStar[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_betaStarClassic(TTree * tree) { tree->Branch("jet_algoPF2_betaStarClassic",&jet_algoPF2_betaStarClassic, "jet_algoPF2_betaStarClassic[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_dR2Mean(TTree * tree) { tree->Branch("jet_algoPF2_dR2Mean",&jet_algoPF2_dR2Mean, "jet_algoPF2_dR2Mean[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_dRMean(TTree * tree) { tree->Branch("jet_algoPF2_dRMean",&jet_algoPF2_dRMean, "jet_algoPF2_dRMean[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_dZ(TTree * tree) { tree->Branch("jet_algoPF2_dZ",&jet_algoPF2_dZ, "jet_algoPF2_dZ[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_frac01(TTree * tree) { tree->Branch("jet_algoPF2_frac01",&jet_algoPF2_frac01, "jet_algoPF2_frac01[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_frac02(TTree * tree) { tree->Branch("jet_algoPF2_frac02",&jet_algoPF2_frac02, "jet_algoPF2_frac02[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_frac03(TTree * tree) { tree->Branch("jet_algoPF2_frac03",&jet_algoPF2_frac03, "jet_algoPF2_frac03[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_frac04(TTree * tree) { tree->Branch("jet_algoPF2_frac04",&jet_algoPF2_frac04, "jet_algoPF2_frac04[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_frac05(TTree * tree) { tree->Branch("jet_algoPF2_frac05",&jet_algoPF2_frac05, "jet_algoPF2_frac05[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_full_mva(TTree * tree) { tree->Branch("jet_algoPF2_full_mva",&jet_algoPF2_full_mva, "jet_algoPF2_full_mva[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_simple_mva(TTree * tree) { tree->Branch("jet_algoPF2_simple_mva",&jet_algoPF2_simple_mva, "jet_algoPF2_simple_mva[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_nCharged(TTree * tree) { tree->Branch("jet_algoPF2_nCharged",&jet_algoPF2_nCharged, "jet_algoPF2_nCharged[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_nNeutrals(TTree * tree) { tree->Branch("jet_algoPF2_nNeutrals",&jet_algoPF2_nNeutrals, "jet_algoPF2_nNeutrals[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_full_wp_level(TTree * tree) { tree->Branch("jet_algoPF2_full_wp_level",&jet_algoPF2_full_wp_level, "jet_algoPF2_full_wp_level[jet_algoPF2_n]/I"); }; 
void Branch_jet_algoPF2_simple_wp_level(TTree * tree) { tree->Branch("jet_algoPF2_simple_wp_level",&jet_algoPF2_simple_wp_level, "jet_algoPF2_simple_wp_level[jet_algoPF2_n]/I"); }; 
void Branch_jet_algoPF3_n(TTree * tree) { tree->Branch("jet_algoPF3_n",&jet_algoPF3_n, "jet_algoPF3_n/I"); }; 
void Branch_jet_algoPF3_nvtx(TTree * tree) { tree->Branch("jet_algoPF3_nvtx",&jet_algoPF3_nvtx, "jet_algoPF3_nvtx/I"); }; 
void Branch_jet_algoPF3_p4(TTree * tree) { tree->Branch("jet_algoPF3_p4", "TClonesArray",&jet_algoPF3_p4, 32000, 0); }; 
void Branch_jet_algoPF3_emfrac(TTree * tree) { tree->Branch("jet_algoPF3_emfrac",&jet_algoPF3_emfrac, "jet_algoPF3_emfrac[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_hadfrac(TTree * tree) { tree->Branch("jet_algoPF3_hadfrac",&jet_algoPF3_hadfrac, "jet_algoPF3_hadfrac[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_erescale(TTree * tree) { tree->Branch("jet_algoPF3_erescale",&jet_algoPF3_erescale, "jet_algoPF3_erescale[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_ntk(TTree * tree) { tree->Branch("jet_algoPF3_ntk",&jet_algoPF3_ntk, "jet_algoPF3_ntk[jet_algoPF3_n]/I"); }; 
void Branch_jet_algoPF3_tkind(TTree * tree) { tree->Branch("jet_algoPF3_tkind", "std::vector<std::vector<unsigned short> >", &jet_algoPF3_tkind); }; 
void Branch_jet_algoPF3_calotwind(TTree * tree) { tree->Branch("jet_algoPF3_calotwind", "std::vector<std::vector<unsigned short> >", &jet_algoPF3_calotwind); }; 
void Branch_jet_algoPF3_beta(TTree * tree) { tree->Branch("jet_algoPF3_beta",&jet_algoPF3_beta, "jet_algoPF3_beta[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_betaStar(TTree * tree) { tree->Branch("jet_algoPF3_betaStar",&jet_algoPF3_betaStar, "jet_algoPF3_betaStar[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_betaStarClassic(TTree * tree) { tree->Branch("jet_algoPF3_betaStarClassic",&jet_algoPF3_betaStarClassic, "jet_algoPF3_betaStarClassic[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_dR2Mean(TTree * tree) { tree->Branch("jet_algoPF3_dR2Mean",&jet_algoPF3_dR2Mean, "jet_algoPF3_dR2Mean[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_dRMean(TTree * tree) { tree->Branch("jet_algoPF3_dRMean",&jet_algoPF3_dRMean, "jet_algoPF3_dRMean[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_dZ(TTree * tree) { tree->Branch("jet_algoPF3_dZ",&jet_algoPF3_dZ, "jet_algoPF3_dZ[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_frac01(TTree * tree) { tree->Branch("jet_algoPF3_frac01",&jet_algoPF3_frac01, "jet_algoPF3_frac01[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_frac02(TTree * tree) { tree->Branch("jet_algoPF3_frac02",&jet_algoPF3_frac02, "jet_algoPF3_frac02[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_frac03(TTree * tree) { tree->Branch("jet_algoPF3_frac03",&jet_algoPF3_frac03, "jet_algoPF3_frac03[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_frac04(TTree * tree) { tree->Branch("jet_algoPF3_frac04",&jet_algoPF3_frac04, "jet_algoPF3_frac04[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_frac05(TTree * tree) { tree->Branch("jet_algoPF3_frac05",&jet_algoPF3_frac05, "jet_algoPF3_frac05[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_full_mva(TTree * tree) { tree->Branch("jet_algoPF3_full_mva",&jet_algoPF3_full_mva, "jet_algoPF3_full_mva[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_simple_mva(TTree * tree) { tree->Branch("jet_algoPF3_simple_mva",&jet_algoPF3_simple_mva, "jet_algoPF3_simple_mva[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_nCharged(TTree * tree) { tree->Branch("jet_algoPF3_nCharged",&jet_algoPF3_nCharged, "jet_algoPF3_nCharged[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_nNeutrals(TTree * tree) { tree->Branch("jet_algoPF3_nNeutrals",&jet_algoPF3_nNeutrals, "jet_algoPF3_nNeutrals[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_full_wp_level(TTree * tree) { tree->Branch("jet_algoPF3_full_wp_level",&jet_algoPF3_full_wp_level, "jet_algoPF3_full_wp_level[jet_algoPF3_n]/I"); }; 
void Branch_jet_algoPF3_simple_wp_level(TTree * tree) { tree->Branch("jet_algoPF3_simple_wp_level",&jet_algoPF3_simple_wp_level, "jet_algoPF3_simple_wp_level[jet_algoPF3_n]/I"); }; 

void Branch_jet_algoPF1_csvBtag(TTree * tree) { tree->Branch("jet_algoPF1_csvBtag",&jet_algoPF1_csvBtag, "jet_algoPF1_csvBtag[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_csvMvaBtag(TTree * tree) { tree->Branch("jet_algoPF1_csvMvaBtag",&jet_algoPF1_csvMvaBtag, "jet_algoPF1_csvMvaBtag[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_jetProbBtag(TTree * tree) { tree->Branch("jet_algoPF1_jetProbBtag",&jet_algoPF1_jetProbBtag, "jet_algoPF1_jetProbBtag[jet_algoPF1_n]/F"); }; 
void Branch_jet_algoPF1_tcheBtag(TTree * tree) { tree->Branch("jet_algoPF1_tcheBtag",&jet_algoPF1_tcheBtag, "jet_algoPF1_tcheBtag[jet_algoPF1_n]/F"); }; 

void Branch_jet_algoPF2_csvBtag(TTree * tree) { tree->Branch("jet_algoPF2_csvBtag",&jet_algoPF2_csvBtag, "jet_algoPF2_csvBtag[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_csvMvaBtag(TTree * tree) { tree->Branch("jet_algoPF2_csvMvaBtag",&jet_algoPF2_csvMvaBtag, "jet_algoPF2_csvMvaBtag[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_jetProbBtag(TTree * tree) { tree->Branch("jet_algoPF2_jetProbBtag",&jet_algoPF2_jetProbBtag, "jet_algoPF2_jetProbBtag[jet_algoPF2_n]/F"); }; 
void Branch_jet_algoPF2_tcheBtag(TTree * tree) { tree->Branch("jet_algoPF2_tcheBtag",&jet_algoPF2_tcheBtag, "jet_algoPF2_tcheBtag[jet_algoPF2_n]/F"); }; 

void Branch_jet_algoPF3_csvBtag(TTree * tree) { tree->Branch("jet_algoPF3_csvBtag",&jet_algoPF3_csvBtag, "jet_algoPF3_csvBtag[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_csvMvaBtag(TTree * tree) { tree->Branch("jet_algoPF3_csvMvaBtag",&jet_algoPF3_csvMvaBtag, "jet_algoPF3_csvMvaBtag[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_jetProbBtag(TTree * tree) { tree->Branch("jet_algoPF3_jetProbBtag",&jet_algoPF3_jetProbBtag, "jet_algoPF3_jetProbBtag[jet_algoPF3_n]/F"); }; 
void Branch_jet_algoPF3_tcheBtag(TTree * tree) { tree->Branch("jet_algoPF3_tcheBtag",&jet_algoPF3_tcheBtag, "jet_algoPF3_tcheBtag[jet_algoPF3_n]/F"); }; 

void Branch_l1emiso_n(TTree * tree) { tree->Branch("l1emiso_n",&l1emiso_n,"l1emiso_n/I");  }; 
void Branch_l1emiso_eta(TTree * tree) { tree->Branch("l1emiso_eta",&l1emiso_eta,"l1emiso_eta[l1emiso_n]/F");  }; 
void Branch_l1emiso_et(TTree * tree) { tree->Branch("l1emiso_et",&l1emiso_et,"l1emiso_et[l1emiso_n]/F");  }; 
void Branch_l1emiso_phi(TTree * tree) { tree->Branch("l1emiso_phi",&l1emiso_phi,"l1emiso_phi[l1emiso_n]/F");  }; 
void Branch_l1emnoniso_n(TTree * tree) { tree->Branch("l1emnoniso_n",&l1emnoniso_n,"l1emnoniso_n/I");  }; 
void Branch_l1emnoniso_et(TTree * tree) { tree->Branch("l1emnoniso_et",&l1emnoniso_et,"l1emnoniso_et[l1emnoniso_n]/F");  }; 
void Branch_l1emnoniso_eta(TTree * tree) { tree->Branch("l1emnoniso_eta",&l1emnoniso_eta,"l1emnoniso_eta[l1emnoniso_n]/F");  }; 
void Branch_l1emnoniso_phi(TTree * tree) { tree->Branch("l1emnoniso_phi",&l1emnoniso_phi,"l1emnoniso_phi[l1emnoniso_n]/F");  }; 
void Branch_l1cenjet_n(TTree * tree) { tree->Branch("l1cenjet_n",&l1cenjet_n,"l1cenjet_n/I");  }; 
void Branch_l1cenjet_et(TTree * tree) { tree->Branch("l1cenjet_et",&l1cenjet_et,"l1cenjet_et[l1cenjet_n]/F");  }; 
void Branch_l1cenjet_eta(TTree * tree) { tree->Branch("l1cenjet_eta",&l1cenjet_eta,"l1cenjet_eta[l1cenjet_n]/F");  }; 
void Branch_l1cenjet_phi(TTree * tree) { tree->Branch("l1cenjet_phi",&l1cenjet_phi,"l1cenjet_phi[l1cenjet_n]/F");  }; 
void Branch_l1forjet_n(TTree * tree) { tree->Branch("l1forjet_n",&l1forjet_n,"l1forjet_n/I");  }; 
void Branch_l1forjet_et(TTree * tree) { tree->Branch("l1forjet_et",&l1forjet_et,"l1forjet_et[l1forjet_n]/F");  }; 
void Branch_l1forjet_eta(TTree * tree) { tree->Branch("l1forjet_eta",&l1forjet_eta,"l1forjet_eta[l1forjet_n]/F");  }; 
void Branch_l1forjet_phi(TTree * tree) { tree->Branch("l1forjet_phi",&l1forjet_phi,"l1forjet_phi[l1forjet_n]/F");  }; 
void Branch_l1taujet_n(TTree * tree) { tree->Branch("l1taujet_n",&l1taujet_n,"l1taujet_n/I");  }; 
void Branch_l1taujet_et(TTree * tree) { tree->Branch("l1taujet_et",&l1taujet_et,"l1taujet_et[l1taujet_n]/F");  }; 
void Branch_l1taujet_eta(TTree * tree) { tree->Branch("l1taujet_eta",&l1taujet_eta,"l1taujet_eta[l1taujet_n]/F");  }; 
void Branch_l1taujet_phi(TTree * tree) { tree->Branch("l1taujet_phi",&l1taujet_phi,"l1taujet_phi[l1taujet_n]/F");  }; 
void Branch_l1met_et(TTree * tree) { tree->Branch("l1met_et",&l1met_et,"l1met_et/F");  }; 
void Branch_l1met_phi(TTree * tree) { tree->Branch("l1met_phi",&l1met_phi,"l1met_phi/F");  }; 
void Branch_l1mu_n(TTree * tree) { tree->Branch("l1mu_n",&l1mu_n,"l1mu_n/I");  }; 
void Branch_l1mu_et(TTree * tree) { tree->Branch("l1mu_et",&l1mu_et,"l1mu_et[l1mu_n]/F");  }; 
void Branch_l1mu_eta(TTree * tree) { tree->Branch("l1mu_eta",&l1mu_eta,"l1mu_eta[l1mu_n]/F");  }; 
void Branch_l1mu_phi(TTree * tree) { tree->Branch("l1mu_phi",&l1mu_phi,"l1mu_phi[l1mu_n]/F");  }; 
void Branch_l1_labels(TTree * tree) { tree->Branch("l1_labels", "std::map<std::string, int>", &l1_labels); }; 
void Branch_l1bits_phy(TTree * tree) { tree->Branch("l1bits_phy", "std::vector<int>", &l1bits_phy); }; 
void Branch_l1bits_tec(TTree * tree) { tree->Branch("l1bits_tec", "std::vector<int>", &l1bits_tec); }; 
void Branch_lpt_n(TTree * tree) { tree->Branch("lpt_n",&lpt_n, "lpt_n/I");  }; 
void Branch_lpt_emu_n(TTree * tree) { tree->Branch("lpt_emu_n",&lpt_emu_n, "lpt_emu_n/I");  }; 
void Branch_lpt_mu_n(TTree * tree) { tree->Branch("lpt_mu_n",&lpt_mu_n, "lpt_mu_n/I");  }; 
void Branch_lpt_el_n(TTree * tree) { tree->Branch("lpt_el_n",&lpt_el_n, "lpt_el_n/I");  }; 
void Branch_lpt_pho_n(TTree * tree) { tree->Branch("lpt_pho_n",&lpt_pho_n, "lpt_pho_n/I");  }; 
void Branch_lpt_pdgid(TTree * tree) { tree->Branch("lpt_pdgid",&lpt_pdgid, "lpt_pdgid[lpt_n]/I");  }; 
void Branch_lpt_ind(TTree * tree) { tree->Branch("lpt_ind",&lpt_ind, "lpt_ind[lpt_n]/I");  }; 
void Branch_lpt_duplicate(TTree * tree) { tree->Branch("lpt_duplicate",&lpt_duplicate, "lpt_duplicate[lpt_n]/I");  }; 
void Branch_lpt_p4(TTree * tree) { tree->Branch("lpt_p4", "TClonesArray",&lpt_p4, 32000, 0); }; 
void Branch_lpt_indgen(TTree * tree) { tree->Branch("lpt_indgen",&lpt_indgen, "lpt_indgen[lpt_n]/I");  }; 
void Branch_lpt_drmatch(TTree * tree) { tree->Branch("lpt_drmatch",&lpt_drmatch, "lpt_drmatch[lpt_n]/F");  }; 
void Branch_met_met(TTree * tree) { tree->Branch("met_met",&met_met, "met_met/F");  }; 
void Branch_met_phi(TTree * tree) { tree->Branch("met_phi",&met_phi, "met_phi/F");  }; 
void Branch_met_met_nocalo(TTree * tree) { tree->Branch("met_met_nocalo",&met_met_nocalo, "met_met_nocalo/F");  }; 
void Branch_met_phi_nocalo(TTree * tree) { tree->Branch("met_phi_nocalo",&met_phi_nocalo, "met_phi_nocalo/F");  }; 
void Branch_met_met_crossed(TTree * tree) { tree->Branch("met_met_crossed",&met_met_crossed, "met_met_crossed/F");  }; 
void Branch_met_phi_crossed(TTree * tree) { tree->Branch("met_phi_crossed",&met_phi_crossed, "met_phi_crossed/F");  }; 
void Branch_met_met_s9(TTree * tree) { tree->Branch("met_met_s9",&met_met_s9, "met_met_s9/F");  }; 
void Branch_met_phi_s9(TTree * tree) { tree->Branch("met_phi_s9",&met_phi_s9, "met_phi_s9/F");  }; 
void Branch_met_met_mip(TTree * tree) { tree->Branch("met_met_mip",&met_met_mip, "met_met_mip/F");  }; 
void Branch_met_phi_mip(TTree * tree) { tree->Branch("met_phi_mip",&met_phi_mip, "met_phi_mip/F");  }; 
void Branch_met_met_jet(TTree * tree) { tree->Branch("met_met_jet",&met_met_jet, "met_met_jet/F");  }; 
void Branch_met_phi_jet(TTree * tree) { tree->Branch("met_phi_jet",&met_phi_jet, "met_phi_jet/F");  }; 
void Branch_met_tcmet(TTree * tree) { tree->Branch("met_tcmet",&met_tcmet, "met_tcmet/F");  }; 
void Branch_met_phi_tcmet(TTree * tree) { tree->Branch("met_phi_tcmet",&met_phi_tcmet, "met_phi_tcmet");  }; 
void Branch_met_pfmet(TTree * tree) { tree->Branch("met_pfmet",&met_pfmet, "met_pfmet/F");  }; 
void Branch_met_phi_pfmet(TTree * tree) { tree->Branch("met_phi_pfmet",&met_phi_pfmet, "met_phi_pfmet");  }; 
void Branch_met_sumet_pfmet(TTree * tree) { tree->Branch("met_sumet_pfmet",&met_sumet_pfmet, "met_sumet_pfmet/F");  }; 
void Branch_met_mEtSig_pfmet(TTree * tree) { tree->Branch("met_mEtSig_pfmet",&met_mEtSig_pfmet, "met_mEtSig_pfmet/F");  }; 
void Branch_met_significance_pfmet(TTree * tree) { tree->Branch("met_significance_pfmet",&met_significance_pfmet, "met_significance_pfmet/F");  }; 
void Branch_met_pfmetType1(TTree * tree) { tree->Branch("met_pfmetType1",&met_pfmetType1, "met_pfmetType1/F");  }; 
void Branch_met_phi_pfmetType1(TTree * tree) { tree->Branch("met_phi_pfmetType1",&met_phi_pfmetType1, "met_phi_pfmetType1");  }; 
void Branch_met_sumet_pfmetType1(TTree * tree) { tree->Branch("met_sumet_pfmetType1",&met_sumet_pfmetType1, "met_sumet_pfmetType1/F");  }; 
void Branch_met_mEtSig_pfmetType1(TTree * tree) { tree->Branch("met_mEtSig_pfmetType1",&met_mEtSig_pfmetType1, "met_mEtSig_pfmetType1/F");  }; 
void Branch_met_significance_pfmetType1(TTree * tree) { tree->Branch("met_significance_pfmetType1",&met_significance_pfmetType1, "met_significance_pfmetType1/F");  }; 
void Branch_mu_glo_n(TTree * tree) { tree->Branch("mu_glo_n",&mu_glo_n, "mu_glo_n/I");  }; 
void Branch_mu_glo_p4(TTree * tree) { tree->Branch("mu_glo_p4", "TClonesArray",&mu_glo_p4, 32000, 0); }; 
void Branch_mu_glo_momvtx(TTree * tree) { tree->Branch("mu_glo_momvtx", "TClonesArray",&mu_glo_momvtx, 32000, 0); }; 
void Branch_mu_glo_posvtx(TTree * tree) { tree->Branch("mu_glo_posvtx", "TClonesArray",&mu_glo_posvtx, 32000, 0); }; 
void Branch_mu_glo_posecal(TTree * tree) { tree->Branch("mu_glo_posecal", "TClonesArray",&mu_glo_posecal, 32000, 0); }; 
void Branch_mu_glo_poshcal(TTree * tree) { tree->Branch("mu_glo_poshcal", "TClonesArray",&mu_glo_poshcal, 32000, 0); }; 
void Branch_mu_glo_nmatches(TTree * tree) { tree->Branch("mu_glo_nmatches",&mu_glo_nmatches, "mu_glo_nmatches[mu_glo_n]/I");  }; 
void Branch_mu_glo_em(TTree * tree) { tree->Branch("mu_glo_em",&mu_glo_em, "mu_glo_em[mu_glo_n]/F");  }; 
void Branch_mu_glo_had(TTree * tree) { tree->Branch("mu_glo_had",&mu_glo_had, "mu_glo_had[mu_glo_n]/F");  }; 
void Branch_mu_glo_ho(TTree * tree) { tree->Branch("mu_glo_ho",&mu_glo_ho, "mu_glo_ho[mu_glo_n]/F");  }; 
void Branch_mu_glo_emS9(TTree * tree) { tree->Branch("mu_glo_emS9",&mu_glo_emS9, "mu_glo_emS9[mu_glo_n]/F");  }; 
void Branch_mu_glo_hadS9(TTree * tree) { tree->Branch("mu_glo_hadS9",&mu_glo_hadS9, "mu_glo_hadS9[mu_glo_n]/F");  }; 
void Branch_mu_glo_hoS9(TTree * tree) { tree->Branch("mu_glo_hoS9",&mu_glo_hoS9, "mu_glo_hoS9[mu_glo_n]/F");  }; 
void Branch_mu_glo_chi2(TTree * tree) { tree->Branch("mu_glo_chi2",&mu_glo_chi2, "mu_glo_chi2[mu_glo_n]/F");  }; 
void Branch_mu_glo_dof(TTree * tree) { tree->Branch("mu_glo_dof",&mu_glo_dof, "mu_glo_dof[mu_glo_n]/F");  }; 
void Branch_mu_glo_tkind(TTree * tree) { tree->Branch("mu_glo_tkind",&mu_glo_tkind,"mu_glo_tkind[mu_glo_n]/I");  }; 
void Branch_mu_glo_staind(TTree * tree) { tree->Branch("mu_glo_staind",&mu_glo_staind,"mu_glo_staind[mu_glo_n]/I");  }; 
void Branch_mu_glo_z0(TTree * tree) { tree->Branch("mu_glo_z0",&mu_glo_z0, "mu_glo_z0[mu_glo_n]/F");  }; 
void Branch_mu_glo_d0(TTree * tree) { tree->Branch("mu_glo_d0",&mu_glo_d0, "mu_glo_d0[mu_glo_n]/F");  }; 
void Branch_mu_glo_D0Vtx(TTree * tree) { tree->Branch("mu_glo_D0Vtx",&mu_glo_D0Vtx,"mu_glo_D0Vtx[mu_glo_n][100]/F");  }; 
void Branch_mu_glo_DZVtx(TTree * tree) { tree->Branch("mu_glo_DZVtx",&mu_glo_DZVtx,"mu_glo_DZVtx[mu_glo_n][100]/F");  }; 
void Branch_mu_glo_z0err(TTree * tree) { tree->Branch("mu_glo_z0err",&mu_glo_z0err, "mu_glo__z0err[mu_glo_n]/F");  }; 
void Branch_mu_glo_d0err(TTree * tree) { tree->Branch("mu_glo_d0err",&mu_glo_d0err, "mu_glo_d0err[mu_glo_n]/F");  }; 
void Branch_mu_glo_charge(TTree * tree) { tree->Branch("mu_glo_charge",&mu_glo_charge, "mu_glo_charge[mu_glo_n]/I");  }; 
void Branch_mu_glo_losthits(TTree * tree) { tree->Branch("mu_glo_losthits",&mu_glo_losthits, "mu_glo_losthits[mu_glo_n]/I");  }; 
void Branch_mu_glo_validhits(TTree * tree) { tree->Branch("mu_glo_validhits",&mu_glo_validhits, "mu_glo_validhits[mu_glo_n]/I");  }; 
void Branch_mu_glo_innerhits(TTree * tree) { tree->Branch("mu_glo_innerhits",&mu_glo_innerhits, "mu_glo_innerhits[mu_glo_n]/I");  }; 
void Branch_mu_glo_type(TTree * tree) { tree->Branch("mu_glo_type",&mu_glo_type, "mu_glo_type[mu_glo_n]/I");  }; 
void Branch_mu_glo_iso(TTree * tree) { tree->Branch("mu_glo_iso",&mu_glo_iso, "mu_glo_iso[mu_glo_n]/F");  }; 
void Branch_mu_glo_pixelhits(TTree * tree) { tree->Branch("mu_glo_pixelhits",&mu_glo_pixelhits, "mu_glo_pixelhits[mu_glo_n]/I");  }; 
void Branch_mu_glo_validChmbhits(TTree * tree) { tree->Branch("mu_glo_validChmbhits",&mu_glo_validChmbhits, "mu_glo_validChmbhits[mu_glo_n]/I");  }; 
void Branch_mu_glo_tkpterr(TTree * tree) { tree->Branch("mu_glo_tkpterr",&mu_glo_tkpterr, "mu_glo_tkpterr[mu_glo_n]/F");  }; 
void Branch_mu_glo_ecaliso03(TTree * tree) { tree->Branch("mu_glo_ecaliso03",&mu_glo_ecaliso03, "mu_glo_ecaliso03[mu_glo_n]/F");  }; 
void Branch_mu_glo_hcaliso03(TTree * tree) { tree->Branch("mu_glo_hcaliso03",&mu_glo_hcaliso03, "mu_glo_hcaliso03[mu_glo_n]/F");  }; 
void Branch_mu_glo_tkiso03(TTree * tree) { tree->Branch("mu_glo_tkiso03",&mu_glo_tkiso03, "mu_glo_tkiso03[mu_glo_n]/F");  }; 
void Branch_mu_glo_dz(TTree * tree) { tree->Branch("mu_glo_dz",&mu_glo_dz, "mu_glo_dz[mu_glo_n]/F");  }; 
//MU ID 2012
void Branch_mu_tkLayers(TTree * tree) { tree->Branch("mu_tkLayers",&mu_tkLayers, "mu_tkLayers[mu_glo_n]/I");  }; 
void Branch_mu_glo_chhadiso04(TTree * tree) { tree->Branch("mu_glo_chhadiso04",&mu_glo_chhadiso04, "mu_glo_chhadiso04[mu_glo_n]/F");  }; 
void Branch_mu_glo_nehadiso04(TTree * tree) { tree->Branch("mu_glo_nehadiso04",&mu_glo_nehadiso04, "mu_glo_nehadiso04[mu_glo_n]/F");  }; 
void Branch_mu_glo_photiso04(TTree * tree) { tree->Branch("mu_glo_photiso04",&mu_glo_photiso04, "mu_glo_photiso04[mu_glo_n]/F");  }; 
void Branch_mu_dbCorr(TTree * tree) { tree->Branch("mu_dbCorr",&mu_dbCorr, "mu_dbCorr[mu_glo_n]/F");  }; 
//
void Branch_pho_n(TTree * tree) { tree->Branch("pho_n",&pho_n, "pho_n/I");  }; 
void Branch_pho_feta(TTree * tree) { tree->Branch("pho_feta",&pho_feta,"pho_feta[pho_n][5]/F");  }; 
void Branch_pho_crackcorr(TTree * tree) { tree->Branch("pho_crackcorr",&pho_crackcorr,"pho_crackcorr[pho_n]/F");  }; 
void Branch_pho_localcorr(TTree * tree) { tree->Branch("pho_localcorr",&pho_localcorr,"pho_localcorr[pho_n]/F");  }; 
void Branch_pho_isEB(TTree * tree) { tree->Branch("pho_isEB",&pho_isEB,"pho_isEB[pho_n]/I");  }; 
void Branch_pho_isEE(TTree * tree) { tree->Branch("pho_isEE",&pho_isEE,"pho_isEE[pho_n]/I");  }; 
void Branch_pho_isEBGap(TTree * tree) { tree->Branch("pho_isEBGap",&pho_isEBGap,"pho_isEBGap[pho_n]/I");  }; 
void Branch_pho_isEEGap(TTree * tree) { tree->Branch("pho_isEEGap",&pho_isEEGap,"pho_isEEGap[pho_n]/I");  }; 
void Branch_pho_isEBEEGap(TTree * tree) { tree->Branch("pho_isEBEEGap",&pho_isEBEEGap,"pho_isEBEEGap[pho_n]/I");  }; 
void Branch_pho_see(TTree * tree) { tree->Branch("pho_see",&pho_see,"pho_see[pho_n]/F");  }; 
void Branch_pho_sieie(TTree * tree) { tree->Branch("pho_sieie",&pho_sieie,"pho_sieie[pho_n]/F");  }; 
void Branch_pho_e1x5(TTree * tree) { tree->Branch("pho_e1x5",&pho_e1x5,"pho_e1x5[pho_n]/F");  }; 
void Branch_pho_e2x5(TTree * tree) { tree->Branch("pho_e2x5",&pho_e2x5,"pho_e2x5[pho_n]/F");  }; 
void Branch_pho_e3x3(TTree * tree) { tree->Branch("pho_e3x3",&pho_e3x3,"pho_e3x3[pho_n]/F");  }; 
void Branch_pho_e5x5(TTree * tree) { tree->Branch("pho_e5x5",&pho_e5x5,"pho_e5x5[pho_n]/F");  }; 
void Branch_pho_emaxxtal(TTree * tree) { tree->Branch("pho_emaxxtal",&pho_emaxxtal,"pho_emaxxtal[pho_n]/F");  }; 
void Branch_pho_hoe(TTree * tree) { tree->Branch("pho_hoe",&pho_hoe,"pho_hoe[pho_n]/F");  }; 
void Branch_pho_h1oe(TTree * tree) { tree->Branch("pho_h1oe",&pho_h1oe,"pho_h1oe[pho_n]/F");  }; 
void Branch_pho_h2oe(TTree * tree) { tree->Branch("pho_h2oe",&pho_h2oe,"pho_h2oe[pho_n]/F");  }; 
void Branch_pho_r1x5(TTree * tree) { tree->Branch("pho_r1x5",&pho_r1x5,"pho_r1x5[pho_n]/F");  }; 
void Branch_pho_r2x5(TTree * tree) { tree->Branch("pho_r2x5",&pho_r2x5,"pho_r2x5[pho_n]/F");  }; 
void Branch_pho_r9(TTree * tree) { tree->Branch("pho_r9",&pho_r9,"pho_r9[pho_n]/F");  }; 
void Branch_pho_ecalsumetconedr04(TTree * tree) { tree->Branch("pho_ecalsumetconedr04",&pho_ecalsumetconedr04,"pho_ecalsumetconedr04[pho_n]/F");  }; 
void Branch_pho_hcalsumetconedr04(TTree * tree) { tree->Branch("pho_hcalsumetconedr04",&pho_hcalsumetconedr04,"pho_hcalsumetconedr04[pho_n]/F");  }; 
void Branch_pho_hcal1sumetconedr04(TTree * tree) { tree->Branch("pho_hcal1sumetconedr04",&pho_hcal1sumetconedr04,"pho_hcal1sumetconedr04[pho_n]/F");  }; 
void Branch_pho_hcal2sumetconedr04(TTree * tree) { tree->Branch("pho_hcal2sumetconedr04",&pho_hcal2sumetconedr04,"pho_hcal2sumetconedr04[pho_n]/F");  }; 
void Branch_pho_trksumptsolidconedr04(TTree * tree) { tree->Branch("pho_trksumptsolidconedr04",&pho_trksumptsolidconedr04,"pho_trksumptsolidconedr04[pho_n]/F");  }; 
void Branch_pho_trksumpthollowconedr04(TTree * tree) { tree->Branch("pho_trksumpthollowconedr04",&pho_trksumpthollowconedr04,"pho_trksumpthollowconedr04[pho_n]/F");  }; 
void Branch_pho_ntrksolidconedr04(TTree * tree) { tree->Branch("pho_ntrksolidconedr04",&pho_ntrksolidconedr04,"pho_ntrksolidconedr04[pho_n]/F");  }; 
void Branch_pho_ntrkhollowconedr04(TTree * tree) { tree->Branch("pho_ntrkhollowconedr04",&pho_ntrkhollowconedr04,"pho_ntrkhollowconedr04[pho_n]/F");  }; 
void Branch_pho_ecalsumetconedr03(TTree * tree) { tree->Branch("pho_ecalsumetconedr03",&pho_ecalsumetconedr03,"pho_ecalsumetconedr03[pho_n]/F");  }; 
void Branch_pho_hcalsumetconedr03(TTree * tree) { tree->Branch("pho_hcalsumetconedr03",&pho_hcalsumetconedr03,"pho_hcalsumetconedr03[pho_n]/F");  }; 
void Branch_pho_hcal1sumetconedr03(TTree * tree) { tree->Branch("pho_hcal1sumetconedr03",&pho_hcal1sumetconedr03,"pho_hcal1sumetconedr03[pho_n]/F");  }; 
void Branch_pho_hcal2sumetconedr03(TTree * tree) { tree->Branch("pho_hcal2sumetconedr03",&pho_hcal2sumetconedr03,"pho_hcal2sumetconedr03[pho_n]/F");  }; 
void Branch_pho_trksumptsolidconedr03(TTree * tree) { tree->Branch("pho_trksumptsolidconedr03",&pho_trksumptsolidconedr03,"pho_trksumptsolidconedr03[pho_n]/F");  }; 
void Branch_pho_trksumpthollowconedr03(TTree * tree) { tree->Branch("pho_trksumpthollowconedr03",&pho_trksumpthollowconedr03,"pho_trksumpthollowconedr03[pho_n]/F");  }; 
void Branch_pho_ntrksolidconedr03(TTree * tree) { tree->Branch("pho_ntrksolidconedr03",&pho_ntrksolidconedr03,"pho_ntrksolidconedr03[pho_n]/F");  }; 
void Branch_pho_ntrkhollowconedr03(TTree * tree) { tree->Branch("pho_ntrkhollowconedr03",&pho_ntrkhollowconedr03,"pho_ntrkhollowconedr03[pho_n]/F");  }; 
void Branch_pho_p4(TTree * tree) { tree->Branch("pho_p4", "TClonesArray",&pho_p4, 32000, 0); }; 
void Branch_pho_calopos(TTree * tree) { tree->Branch("pho_calopos", "TClonesArray",&pho_calopos, 32000, 0); }; 
void Branch_pho_barrel(TTree * tree) { tree->Branch("pho_barrel",&pho_barrel, "pho_barrel[pho_n]/I");  }; 
void Branch_pho_scind(TTree * tree) { tree->Branch("pho_scind",&pho_scind, "pho_scind[pho_n]/I");  }; 
void Branch_pho_haspixseed(TTree * tree) { tree->Branch("pho_haspixseed",&pho_haspixseed,"pho_haspixseed[pho_n]/I");  }; 
void Branch_pho_hasconvtks(TTree * tree) { tree->Branch("pho_hasconvtks",&pho_hasconvtks,"pho_hasconvtks[pho_n]/I");  }; 
void Branch_pho_nconv(TTree * tree) { tree->Branch("pho_nconv",&pho_nconv,"pho_nconv[pho_n]/I");  }; 
void Branch_pho_isconv(TTree * tree) { tree->Branch("pho_isconv",&pho_isconv,"pho_isconv[pho_n]/I");  }; 
void Branch_pho_conv_ntracks(TTree * tree) { tree->Branch("pho_conv_ntracks",&pho_conv_ntracks,"pho_conv_ntracks[pho_n]/I");  }; 
void Branch_pho_conv_pairinvmass(TTree * tree) { tree->Branch("pho_conv_pairinvmass",&pho_conv_pairinvmass,"pho_conv_pairinvmass[pho_n]/F");  }; 
void Branch_pho_conv_paircotthetasep(TTree * tree) { tree->Branch("pho_conv_paircotthetasep",&pho_conv_paircotthetasep,"pho_conv_paircotthetasep[pho_n]/F");  }; 
void Branch_pho_conv_eoverp(TTree * tree) { tree->Branch("pho_conv_eoverp",&pho_conv_eoverp,"pho_conv_eoverp[pho_n]/F");  }; 
void Branch_pho_conv_zofprimvtxfromtrks(TTree * tree) { tree->Branch("pho_conv_zofprimvtxfromtrks",&pho_conv_zofprimvtxfromtrks,"pho_conv_zofprimvtxfromtrks[pho_n]/F");  }; 
void Branch_pho_conv_distofminapproach(TTree * tree) { tree->Branch("pho_conv_distofminapproach",&pho_conv_distofminapproach,"pho_conv_distofminapproach[pho_n]/F");  }; 
void Branch_pho_conv_dphitrksatvtx(TTree * tree) { tree->Branch("pho_conv_dphitrksatvtx",&pho_conv_dphitrksatvtx,"pho_conv_dphitrksatvtx[pho_n]/F");  }; 
void Branch_pho_conv_dphitrksatecal(TTree * tree) { tree->Branch("pho_conv_dphitrksatecal",&pho_conv_dphitrksatecal,"pho_conv_dphitrksatecal[pho_n]/F");  }; 
void Branch_pho_conv_detatrksatecal(TTree * tree) { tree->Branch("pho_conv_detatrksatecal",&pho_conv_detatrksatecal,"pho_conv_detatrksatecal[pho_n]/F");  }; 
void Branch_pho_conv_tk1_d0(TTree * tree) { tree->Branch("pho_conv_tk1_d0",&pho_conv_tk1_d0,"pho_conv_tk1_d0[pho_n]/F");  }; 
void Branch_pho_conv_tk1_pout(TTree * tree) { tree->Branch("pho_conv_tk1_pout",&pho_conv_tk1_pout,"pho_conv_tk1_pout[pho_n]/F");  }; 
void Branch_pho_conv_tk1_pin(TTree * tree) { tree->Branch("pho_conv_tk1_pin",&pho_conv_tk1_pin,"pho_conv_tk1_pin[pho_n]/F");  }; 
void Branch_pho_conv_tk2_d0(TTree * tree) { tree->Branch("pho_conv_tk2_d0",&pho_conv_tk2_d0,"pho_conv_tk2_d0[pho_n]/F");  }; 
void Branch_pho_conv_tk2_pout(TTree * tree) { tree->Branch("pho_conv_tk2_pout",&pho_conv_tk2_pout,"pho_conv_tk2_pout[pho_n]/F");  }; 
void Branch_pho_conv_tk2_pin(TTree * tree) { tree->Branch("pho_conv_tk2_pin",&pho_conv_tk2_pin,"pho_conv_tk2_pin[pho_n]/F");  }; 
void Branch_pho_conv_tk1_dz(TTree * tree) { tree->Branch("pho_conv_tk1_dz",&pho_conv_tk1_dz,"pho_conv_tk1_dz[pho_n]/F");  }; 
void Branch_pho_conv_tk2_dz(TTree * tree) { tree->Branch("pho_conv_tk2_dz",&pho_conv_tk2_dz,"pho_conv_tk2_dz[pho_n]/F");  }; 
void Branch_pho_conv_tk1_dzerr(TTree * tree) { tree->Branch("pho_conv_tk1_dzerr",&pho_conv_tk1_dzerr,"pho_conv_tk1_dzerr[pho_n]/F");  }; 
void Branch_pho_conv_tk2_dzerr(TTree * tree) { tree->Branch("pho_conv_tk2_dzerr",&pho_conv_tk2_dzerr,"pho_conv_tk2_dzerr[pho_n]/F");  }; 
void Branch_pho_conv_tk1_nh(TTree * tree) { tree->Branch("pho_conv_tk1_nh",&pho_conv_tk1_nh,"pho_conv_tk1_nh[pho_n]/I");  }; 
void Branch_pho_conv_tk2_nh(TTree * tree) { tree->Branch("pho_conv_tk2_nh",&pho_conv_tk2_nh,"pho_conv_tk2_nh[pho_n]/I");  }; 
void Branch_pho_conv_chi2(TTree * tree) { tree->Branch("pho_conv_chi2",&pho_conv_chi2,"pho_conv_chi2[pho_n]/F");  }; 
void Branch_pho_conv_chi2_probability(TTree * tree) { tree->Branch("pho_conv_chi2_probability",&pho_conv_chi2_probability,"pho_conv_chi2_probability[pho_n]/F");  }; 
void Branch_pho_conv_ch1ch2(TTree * tree) { tree->Branch("pho_conv_ch1ch2",&pho_conv_ch1ch2,"pho_conv_ch1ch2[pho_n]/I");  }; 
void Branch_pho_conv_validvtx(TTree * tree) { tree->Branch("pho_conv_validvtx",&pho_conv_validvtx,"pho_conv_validvtx[pho_n]/I");  }; 
void Branch_pho_conv_MVALikelihood(TTree * tree) { tree->Branch("pho_conv_MVALikelihood",&pho_conv_MVALikelihood,"pho_conv_MVALikelihood[pho_n]/I");  }; 
void Branch_pho_sipip(TTree * tree) { tree->Branch("pho_sipip",&pho_sipip,"pho_sipip[pho_n]/F");  }; 
void Branch_pho_sieip(TTree * tree) { tree->Branch("pho_sieip",&pho_sieip,"pho_sieip[pho_n]/F");  }; 
void Branch_pho_zernike20(TTree * tree) { tree->Branch("pho_zernike20",&pho_zernike20,"pho_zernike20[pho_n]/F");  }; 
void Branch_pho_zernike42(TTree * tree) { tree->Branch("pho_zernike42",&pho_zernike42,"pho_zernike42[pho_n]/F");  }; 
void Branch_pho_e2nd(TTree * tree) { tree->Branch("pho_e2nd",&pho_e2nd,"pho_e2nd[pho_n]/F");  }; 
void Branch_pho_e2x5right(TTree * tree) { tree->Branch("pho_e2x5right",&pho_e2x5right,"pho_e2x5right[pho_n]/F");  }; 
void Branch_pho_e2x5left(TTree * tree) { tree->Branch("pho_e2x5left",&pho_e2x5left,"pho_e2x5left[pho_n]/F");  }; 
void Branch_pho_e2x5top(TTree * tree) { tree->Branch("pho_e2x5top",&pho_e2x5top,"pho_e2x5top[pho_n]/F");  }; 
void Branch_pho_e2x5max(TTree * tree) { tree->Branch("pho_e2x5max",&pho_e2x5max,"pho_e2x5max[pho_n]/F");  }; 
void Branch_pho_bieta(TTree * tree) { tree->Branch("pho_bieta",&pho_bieta,"pho_bieta[pho_n]/I");  }; 
void Branch_pho_biphi(TTree * tree) { tree->Branch("pho_biphi",&pho_biphi,"pho_biphi[pho_n]/I");  }; 
void Branch_pho_betacry(TTree * tree) { tree->Branch("pho_betacry",&pho_betacry,"pho_betacry[pho_n]/F");  }; 
void Branch_pho_phicry(TTree * tree) { tree->Branch("pho_phicry",&pho_phicry,"pho_phicry[pho_n]/F");  }; 
void Branch_pho_bthetatilt(TTree * tree) { tree->Branch("pho_bthetatilt",&pho_bthetatilt,"pho_bthetatitl[pho_n]/F");  }; 
void Branch_pho_bphitilt(TTree * tree) { tree->Branch("pho_bphitilt",&pho_bphitilt,"pho_bphitilt[pho_n]/F");  }; 
void Branch_pho_e2x5bottom(TTree * tree) { tree->Branch("pho_e2x5bottom",&pho_e2x5bottom,"pho_e2x5bottom[pho_n]/F");  }; 
void Branch_pho_eright(TTree * tree) { tree->Branch("pho_eright",&pho_eright,"pho_eright[pho_n]/F");  }; 
void Branch_pho_eleft(TTree * tree) { tree->Branch("pho_eleft",&pho_eleft,"pho_eleft[pho_n]/F");  }; 
void Branch_pho_etop(TTree * tree) { tree->Branch("pho_etop",&pho_etop,"pho_etop[pho_n]/F");  }; 
void Branch_pho_ebottom(TTree * tree) { tree->Branch("pho_ebottom",&pho_ebottom,"pho_ebottom[pho_n]/F");  }; 
void Branch_pho_e2overe9(TTree * tree) { tree->Branch("pho_e2overe9",&pho_e2overe9,"pho_e2overe9[pho_n]/F");  }; 
void Branch_pho_seed_severity(TTree * tree) { tree->Branch("pho_seed_severity",&pho_seed_severity,"pho_seed_severity[pho_n]/F");  }; 
void Branch_pho_seed_time(TTree * tree) { tree->Branch("pho_seed_time",&pho_seed_time,"pho_seed_time[pho_n]/F");  }; 
void Branch_pho_seed_outoftimechi2(TTree * tree) { tree->Branch("pho_seed_outoftimechi2",&pho_seed_outoftimechi2,"pho_seed_outoftimechi2[pho_n]/F");  }; 
void Branch_pho_seed_chi2(TTree * tree) { tree->Branch("pho_seed_chi2",&pho_seed_chi2,"pho_seed_chi2[pho_n]/F");  }; 
void Branch_pho_seed_recoflag(TTree * tree) { tree->Branch("pho_seed_recoflag",&pho_seed_recoflag,"pho_seed_recoflag[pho_n]/F");  }; 
void Branch_pho_conv_vtx(TTree * tree) { tree->Branch("pho_conv_vtx", "TClonesArray",&pho_conv_vtx, 32000, 0); }; 
void Branch_pho_conv_pair_momentum(TTree * tree) { tree->Branch("pho_conv_pair_momentum", "TClonesArray",&pho_conv_pair_momentum, 32000, 0); }; 
void Branch_pho_conv_refitted_momentum(TTree * tree) { tree->Branch("pho_conv_refitted_momentum", "TClonesArray",&pho_conv_refitted_momentum, 32000, 0); }; 
void Branch_pho_conv_vertexcorrected_p4(TTree * tree) { tree->Branch("pho_conv_vertexcorrected_p4", "TClonesArray",&pho_conv_vertexcorrected_p4, 32000, 0); }; 
void Branch_pho_residCorrEnergy(TTree * tree) { tree->Branch("pho_residCorrEnergy",&pho_residCorrEnergy,"pho_residCorrEnergy[pho_n]/F");  };
void Branch_pho_residCorrResn(TTree * tree) { tree->Branch("pho_residCorrResn",&pho_residCorrResn,"pho_residCorrResn[pho_n]/F");  }; 

void Branch_pho_regr_energy(TTree * tree) { tree->Branch("pho_regr_energy",&pho_regr_energy,"pho_regr_energy[pho_n]/F");  };
void Branch_pho_regr_energyerr(TTree * tree) { tree->Branch("pho_regr_energyerr",&pho_regr_energyerr,"pho_regr_energyerr[pho_n]/F");  };


void Branch_el_std_regr_energy(TTree * tree) { tree->Branch("el_std_regr_energy",&el_std_regr_energy,"el_std_regr_energy[el_std_n]/F");  };
void Branch_el_std_regr_energyerr(TTree * tree) { tree->Branch("el_std_regr_energyerr",&el_std_regr_energyerr,"el_std_regr_energyerr[el_std_n]/F");  };


void Branch_conv_n(TTree * tree) { tree->Branch("conv_n", &conv_n, "conv_n/I"); };
void Branch_conv_p4(TTree * tree) { tree->Branch("conv_p4", "TClonesArray", &conv_p4, 32000, 0); };
void Branch_conv_ntracks(TTree * tree) { tree->Branch("conv_ntracks",&conv_ntracks,"conv_ntracks[conv_n]/I"); };
void Branch_conv_pairinvmass(TTree * tree) { tree->Branch("conv_pairinvmass",&conv_pairinvmass,"conv_pairinvmass[conv_n]/F"); };
void Branch_conv_paircotthetasep(TTree * tree) { tree->Branch("conv_paircotthetasep",&conv_paircotthetasep,"conv_paircotthetasep[conv_n]/F"); };
void Branch_conv_eoverp(TTree * tree) { tree->Branch("conv_eoverp",&conv_eoverp,"conv_eoverp[conv_n]/F"); };
void Branch_conv_distofminapproach(TTree * tree) { tree->Branch("conv_distofminapproach",&conv_distofminapproach,"conv_distofminapproach[conv_n]/F"); };
void Branch_conv_dphitrksatvtx(TTree * tree) { tree->Branch("conv_dphitrksatvtx",&conv_dphitrksatvtx,"conv_dphitrksatvtx[conv_n]/F"); };
void Branch_conv_dphitrksatecal(TTree * tree) { tree->Branch("conv_dphitrksatecal",&conv_dphitrksatecal,"conv_dphitrksatecal[conv_n]/F"); };
void Branch_conv_detatrksatecal(TTree * tree) { tree->Branch("conv_detatrksatecal",&conv_detatrksatecal,"conv_detatrksatecal[conv_n]/F"); };
void Branch_conv_dxy(TTree * tree) { tree->Branch("conv_dxy",&conv_dxy,"conv_dxy[conv_n]/F"); };
void Branch_conv_dz(TTree * tree) { tree->Branch("conv_dz",&conv_dz,"conv_dz[conv_n]/F"); };
void Branch_conv_lxy(TTree * tree) { tree->Branch("conv_lxy",&conv_lxy,"conv_lxy[conv_n]/F"); };
void Branch_conv_lz(TTree * tree) { tree->Branch("conv_lz",&conv_lz,"conv_lz[conv_n]/F"); };
void Branch_conv_zofprimvtxfromtrks(TTree * tree) { tree->Branch("conv_zofprimvtxfromtrks",&conv_zofprimvtxfromtrks,"conv_zofprimvtxfromtrks[conv_n]/F"); };
void Branch_conv_nHitsBeforeVtx(TTree * tree) { tree->Branch("conv_nHitsBeforeVtx", "std::vector<std::vector<unsigned short> >", &conv_nHitsBeforeVtx); };
void Branch_conv_nSharedHits(TTree * tree) { tree->Branch("conv_nSharedHits",&conv_nSharedHits,"conv_nSharedHits[conv_n]/I"); };
void Branch_conv_validvtx(TTree * tree) { tree->Branch("conv_validvtx",&conv_validvtx,"conv_validvtx[conv_n]/I"); };
void Branch_conv_MVALikelihood(TTree * tree) { tree->Branch("conv_MVALikelihood",&conv_MVALikelihood,"conv_MVALikelihood[conv_n]/I"); };
void Branch_conv_chi2(TTree * tree) { tree->Branch("conv_chi2",&conv_chi2,"conv_chi2[conv_n]/F"); };
void Branch_conv_chi2_probability(TTree * tree) { tree->Branch("conv_chi2_probability",&conv_chi2_probability,"conv_chi2_probability[conv_n]/F"); };
void Branch_conv_vtx_xErr(TTree * tree) { tree->Branch("conv_vtx_xErr",&conv_vtx_xErr,"conv_vtx_xErr[conv_n]/F"); };
void Branch_conv_vtx_yErr(TTree * tree) { tree->Branch("conv_vtx_yErr",&conv_vtx_yErr,"conv_vtx_yErr[conv_n]/F"); };
void Branch_conv_vtx_zErr(TTree * tree) { tree->Branch("conv_vtx_zErr",&conv_vtx_zErr,"conv_vtx_zErr[conv_n]/F"); };
void Branch_conv_tk1_dz(TTree * tree) { tree->Branch("conv_tk1_dz",&conv_tk1_dz,"conv_tk1_dz[conv_n]/F"); };
void Branch_conv_tk2_dz(TTree * tree) { tree->Branch("conv_tk2_dz",&conv_tk2_dz,"conv_tk2_dz[conv_n]/F"); };
void Branch_conv_tk1_dzerr(TTree * tree) { tree->Branch("conv_tk1_dzerr",&conv_tk1_dzerr,"conv_tk1_dzerr[conv_n]/F"); };
void Branch_conv_tk2_dzerr(TTree * tree) { tree->Branch("conv_tk2_dzerr",&conv_tk2_dzerr,"conv_tk2_dzerr[conv_n]/F"); };
void Branch_conv_tk1_nh(TTree * tree) { tree->Branch("conv_tk1_nh",&conv_tk1_nh,"conv_tk1_nh[conv_n]/I"); };
void Branch_conv_tk2_nh(TTree * tree) { tree->Branch("conv_tk2_nh",&conv_tk2_nh,"conv_tk2_nh[conv_n]/I"); };
void Branch_conv_ch1ch2(TTree * tree) { tree->Branch("conv_ch1ch2",&conv_ch1ch2,"conv_ch1ch2[conv_n]/I"); };
void Branch_conv_tk1_d0(TTree * tree) { tree->Branch("conv_tk1_d0",&conv_tk1_d0,"conv_tk1_d0[conv_n]/F"); };
void Branch_conv_tk1_pout(TTree * tree) { tree->Branch("conv_tk1_pout",&conv_tk1_pout,"conv_tk1_pout[conv_n]/F"); };
void Branch_conv_tk1_pin(TTree * tree) { tree->Branch("conv_tk1_pin",&conv_tk1_pin,"conv_tk1_pin[conv_n]/F"); };
void Branch_conv_tk2_d0(TTree * tree) { tree->Branch("conv_tk2_d0",&conv_tk2_d0,"conv_tk2_d0[conv_n]/F"); };
void Branch_conv_tk2_pout(TTree * tree) { tree->Branch("conv_tk2_pout",&conv_tk2_pout,"conv_tk2_pout[conv_n]/F"); };
void Branch_conv_tk2_pin(TTree * tree) { tree->Branch("conv_tk2_pin",&conv_tk2_pin,"conv_tk2_pin[conv_n]/F"); };
void Branch_conv_vtx(TTree * tree) { tree->Branch("conv_vtx", "TClonesArray", &conv_vtx, 32000, 0); };
void Branch_conv_tk1_pterr(TTree * tree) { tree->Branch("conv_tk1_pterr",&conv_tk1_pterr,"conv_tk1_pterr[conv_n]/F"); };
void Branch_conv_tk2_pterr(TTree * tree) { tree->Branch("conv_tk2_pterr",&conv_tk2_pterr,"conv_tk2_pterr[conv_n]/F"); };
void Branch_conv_tk1_etaerr(TTree * tree) { tree->Branch("conv_tk1_etaerr",&conv_tk1_etaerr,"conv_tk1_etaerr[conv_n]/F"); };
void Branch_conv_tk2_etaerr(TTree * tree) { tree->Branch("conv_tk2_etaerr",&conv_tk2_etaerr,"conv_tk2_etaerr[conv_n]/F"); };
void Branch_conv_tk1_thetaerr(TTree * tree) { tree->Branch("conv_tk1_thetaerr",&conv_tk1_thetaerr,"conv_tk1_thetaerr[conv_n]/F"); };
void Branch_conv_tk2_thetaerr(TTree * tree) { tree->Branch("conv_tk2_thetaerr",&conv_tk2_thetaerr,"conv_tk2_thetaerr[conv_n]/F"); };
void Branch_conv_tk1_phierr(TTree * tree) { tree->Branch("conv_tk1_phierr",&conv_tk1_phierr,"conv_tk1_phierr[conv_n]/F"); };
void Branch_conv_tk2_phierr(TTree * tree) { tree->Branch("conv_tk2_phierr",&conv_tk2_phierr,"conv_tk2_phierr[conv_n]/F"); };
void Branch_conv_tk1_lambdaerr(TTree * tree) { tree->Branch("conv_tk1_lambdaerr",&conv_tk1_lambdaerr,"conv_tk1_lambdaerr[conv_n]/F"); };
void Branch_conv_tk2_lambdaerr(TTree * tree) { tree->Branch("conv_tk2_lambdaerr",&conv_tk2_lambdaerr,"conv_tk2_lambdaerr[conv_n]/F"); };
void Branch_conv_pair_momentum(TTree * tree) { tree->Branch("conv_pair_momentum", "TClonesArray", &conv_pair_momentum, 32000, 0); };
void Branch_conv_refitted_momentum(TTree * tree) { tree->Branch("conv_refitted_momentum", "TClonesArray", &conv_refitted_momentum, 32000, 0); };
void Branch_conv_singleleg_momentum(TTree * tree) { tree->Branch("conv_singleleg_momentum", "TClonesArray", &conv_singleleg_momentum, 32000, 0); };
void Branch_lptgeninfo_n(TTree * tree) { tree->Branch("lptgeninfo_n",&lptgeninfo_n, "lptgeninfo_n/I");  }; 
void Branch_lptgen_n(TTree * tree) { tree->Branch("lptgen_n",&lptgen_n, "lptgen_n/I");  }; 
void Branch_lptgeninfo_p4(TTree * tree) { tree->Branch("lptgeninfo_p4", "TClonesArray",&lptgeninfo_p4, 32000, 0); }; 
void Branch_lptgen_p4(TTree * tree) { tree->Branch("lptgen_p4", "TClonesArray",&lptgen_p4, 32000, 0); }; 
void Branch_lptgen_befrad_p4(TTree * tree) { tree->Branch("lptgen_befrad_p4", "TClonesArray",&lptgen_befrad_p4, 32000, 0); }; 
void Branch_lptgeninfo_status(TTree * tree) { tree->Branch("lptgeninfo_status",&lptgeninfo_status, "lptgeninfo_status[lptgeninfo_n]/I");  }; 
void Branch_lptgeninfo_pdgid(TTree * tree) { tree->Branch("lptgeninfo_pdgid",&lptgeninfo_pdgid, "lptgeninfo_pdgid[lptgeninfo_n]/I");  }; 
void Branch_lptgeninfo_mother(TTree * tree) { tree->Branch("lptgeninfo_mother",&lptgeninfo_mother, "lptgeninfo_mother[lptgeninfo_n]/I");  }; 
void Branch_lptgen_status(TTree * tree) { tree->Branch("lptgen_status",&lptgen_status,           "lptgen_status[lptgen_n]/I"     );  }; 
void Branch_lptgen_pdgid(TTree * tree) { tree->Branch("lptgen_pdgid",&lptgen_pdgid,             "lptgen_pdgid[lptgen_n]/I"      );  }; 
void Branch_lptgen_mother(TTree * tree) { tree->Branch("lptgen_mother",&lptgen_mother,           "lptgen_mother[lptgen_n]/I"     );  }; 
void Branch_lptgen_motherpdgid(TTree * tree) { tree->Branch("lptgen_motherpdgid",&lptgen_motherpdgid, "lptgen_motherpdgid[lptgen_n]/I");  }; 
void Branch_lptgen_indrec(TTree * tree) { tree->Branch("lptgen_indrec",&lptgen_indrec,           "lptgen_indrec[lptgen_n]/I");  }; 
void Branch_lptgen_indrecel(TTree * tree) { tree->Branch("lptgen_indrecel",&lptgen_indrecel,       "lptgen_indrecel[lptgen_n]/I");  }; 
void Branch_lptgen_indrecph(TTree * tree) { tree->Branch("lptgen_indrecph",&lptgen_indrecph,       "lptgen_indrecph[lptgen_n]/I");  }; 
void Branch_lptgen_indrecmu(TTree * tree) { tree->Branch("lptgen_indrecmu",&lptgen_indrecmu,       "lptgen_indrecmu[lptgen_n]/I");  }; 
void Branch_lptgen_drmatch(TTree * tree) { tree->Branch("lptgen_drmatch",&lptgen_drmatch,         "lptgen_drmatch[lptgen_n]/F");  }; 
void Branch_lptgen_drmatchel(TTree * tree) { tree->Branch("lptgen_drmatchel",&lptgen_drmatchel,     "lptgen_drmatchel[lptgen_n]/F");  }; 
void Branch_lptgen_drmatchmu(TTree * tree) { tree->Branch("lptgen_drmatchmu",&lptgen_drmatchmu,     "lptgen_drmatchmu[lptgen_n]/F");  }; 
void Branch_lptgen_drmatchph(TTree * tree) { tree->Branch("lptgen_drmatchph",&lptgen_drmatchph,     "lptgen_drmatchph[lptgen_n]/F");  }; 
void Branch_lptgen_indinfo(TTree * tree) { tree->Branch("lptgen_indinfo",&lptgen_indinfo,         "lptgen_indinfo[lptgen_n]/I"    );  }; 
void Branch_lptgen_historycode(TTree * tree) { tree->Branch("lptgen_historycode",&lptgen_historycode, "lptgen_historycode[lptgen_n]/I");  }; 
void Branch_simtrk_n(TTree * tree) { tree->Branch("simtrk_n",&simtrk_n, "simtrk_n/I");  }; 
void Branch_simtrk_p4(TTree * tree) { tree->Branch("simtrk_p4", "TClonesArray",&simtrk_p4, 32000, 0); }; 
void Branch_simtrk_vtx(TTree * tree) { tree->Branch("simtrk_vtx", "TClonesArray",&simtrk_vtx, 32000, 0); }; 
void Branch_simtrk_pdgid(TTree * tree) { tree->Branch("simtrk_pdgid",&simtrk_pdgid, "simtrk_pdgid[simtrk_n]/I");  }; 
void Branch_simtrk_trkid(TTree * tree) { tree->Branch("simtrk_trkid",&simtrk_trkid, "simtrk_trkid[simtrk_n]/I");  }; 
void Branch_simtrk_mothertrkid(TTree * tree) { tree->Branch("simtrk_mothertrkid",&simtrk_mothertrkid, "simtrk_mothertrkid[simtrk_n]/I");  }; 
void Branch_simvtx(TTree * tree) { tree->Branch("simvtx", "TClonesArray",&simvtx, 32000, 0); }; 
void Branch_simhit_n(TTree * tree) { tree->Branch("simhit_n",&simhit_n, "simhit_n/I");  }; 
void Branch_simhit_xyz(TTree * tree) { tree->Branch("simhit_xyz", "TClonesArray",&simhit_xyz, 32000, 0); }; 
void Branch_simhit_pabs(TTree * tree) { tree->Branch("simhit_pabs",&simhit_pabs, "simhit_pabs[simhit_n]/F");  }; 
void Branch_simhit_eloss(TTree * tree) { tree->Branch("simhit_eloss",&simhit_eloss, "simhit_eloss[simhit_n]/F");  }; 
void Branch_simhit_subdet(TTree * tree) { tree->Branch("simhit_subdet",&simhit_subdet, "simhit_subdet[simhit_n]/I");  }; 
void Branch_simhit_pdgid(TTree * tree) { tree->Branch("simhit_pdgid",&simhit_pdgid, "simhit_pdgid[simhit_n]/I");  }; 
void Branch_simhit_trkid(TTree * tree) { tree->Branch("simhit_trkid",&simhit_trkid, "simhit_trkid[simhit_n]/I");  }; 
void Branch_simhit_simtrkind(TTree * tree) { tree->Branch("simhit_simtrkind",&simhit_simtrkind, "simhit_simtrkind[simhit_n]/I");  }; 
void Branch_tk_n(TTree * tree) { tree->Branch("tk_n",&tk_n, "tk_n/I");  }; 
void Branch_tk_p4(TTree * tree) { tree->Branch("tk_p4", "TClonesArray",&tk_p4, 32000, 0); }; 
void Branch_tk_vtx_pos(TTree * tree) { tree->Branch("tk_vtx_pos", "TClonesArray",&tk_vtx_pos, 32000, 0); }; 
void Branch_tk_nhits(TTree * tree) { tree->Branch("tk_nhits",&tk_nhits, "tk_nhits[tk_n]/I");  }; 
void Branch_tk_charge(TTree * tree) { tree->Branch("tk_charge",&tk_charge, "tk_charge[tk_n]/I");  }; 
void Branch_tk_nlosthit(TTree * tree) { tree->Branch("tk_nlosthit",&tk_nlosthit,"tk_nlosthit[tk_n]/I" );  }; 
void Branch_tk_tpind(TTree * tree) { tree->Branch("tk_tpind",&tk_tpind,"tk_tpind[tk_n]/I" );  }; 
void Branch_tk_chi2(TTree * tree) { tree->Branch("tk_chi2",&tk_chi2,"tk_chi2[tk_n]/F" );  }; 
void Branch_tk_dof(TTree * tree) { tree->Branch("tk_dof",&tk_dof, "tk_dof[tk_n]/F");  }; 
void Branch_tk_d0(TTree * tree) { tree->Branch("tk_d0",&tk_d0, "tk_d0[tk_n]/F");  }; 
void Branch_tk_dz(TTree * tree) { tree->Branch("tk_dz",&tk_dz, "tk_dz[tk_n]/F");  }; 
void Branch_tk_qoverperr(TTree * tree) { tree->Branch("tk_qoverperr",&tk_qoverperr,"tk_qoverperr[tk_n]/F" );  }; 
void Branch_tk_pterr(TTree * tree) { tree->Branch("tk_pterr",&tk_pterr,"tk_pterr[tk_n]/F" );  }; 
void Branch_tk_etaerr(TTree * tree) { tree->Branch("tk_etaerr",&tk_etaerr,"tk_etaerr[tk_n]/F" );  }; 
void Branch_tk_phierr(TTree * tree) { tree->Branch("tk_phierr",&tk_phierr,"tk_phierr[tk_n]/F" );  }; 
void Branch_tk_d0err(TTree * tree) { tree->Branch("tk_d0err",&tk_d0err,"tk_d0err[tk_n]/F" );  }; 
void Branch_tk_dzerr(TTree * tree) { tree->Branch("tk_dzerr",&tk_dzerr, "tk_dzerr[tk_n]/F");  }; 
void Branch_tk_hp_nvalid(TTree * tree) { tree->Branch("tk_hp_nvalid",&tk_hp_nvalid, "tk_hp_nvalid[tk_n]/I");  }; 
void Branch_tk_hp_nlost(TTree * tree) { tree->Branch("tk_hp_nlost",&tk_hp_nlost, "tk_hp_nlost[tk_n]/I");  }; 
void Branch_tk_hp_nvalidpix(TTree * tree) { tree->Branch("tk_hp_nvalidpix",&tk_hp_nvalidpix, "tk_hp_nvalidpix[tk_n]/I");  }; 
void Branch_tk_hp_expin(TTree * tree) { tree->Branch("tk_hp_expin",&tk_hp_expin, "tk_hp_expin[tk_n]/I");  }; 
void Branch_tk_hp_expout(TTree * tree) { tree->Branch("tk_hp_expout",&tk_hp_expout, "tk_hp_expout[tk_n]/I");  }; 
void Branch_tk_quality(TTree * tree) { tree->Branch("tk_quality",&tk_quality, "tk_quality[tk_n]/I");  }; 
void Branch_tk_algo(TTree * tree) { tree->Branch("tk_algo",&tk_algo, "tk_algo[tk_n]/I");  }; 
void Branch_tp_n(TTree * tree) { tree->Branch("tp_n",&tp_n, "tp_n/I");  }; 
void Branch_tp_p4(TTree * tree) { tree->Branch("tp_p4", "TClonesArray",&tp_p4, 32000, 0); }; 
void Branch_tp_vtx(TTree * tree) { tree->Branch("tp_vtx", "TClonesArray",&tp_vtx, 32000, 0); }; 
void Branch_tv_xyz(TTree * tree) { tree->Branch("tv_xyz", "TClonesArray",&tv_xyz, 32000, 0); }; 
void Branch_tp_pdgid(TTree * tree) { tree->Branch("tp_pdgid",&tp_pdgid, "tp_pdgid[tp_n]/I");  }; 
void Branch_tp_motherid(TTree * tree) { tree->Branch("tp_motherid",&tp_motherid, "tp_motherid[tp_n]/I");  }; 
void Branch_tp_charge(TTree * tree) { tree->Branch("tp_charge",&tp_charge, "tp_charge[tp_n]/I");  }; 
void Branch_tp_tkind(TTree * tree) { tree->Branch("tp_tkind",&tp_tkind, "tp_tkind[tp_n]/I");  }; 
void Branch_tp_genind(TTree * tree) { tree->Branch("tp_genind",&tp_genind, "tp_genind[tp_n]/I");  }; 
void Branch_tp_d0(TTree * tree) { tree->Branch("tp_d0",&tp_d0, "tp_d0[tp_n]/D");  }; 
void Branch_tp_dz(TTree * tree) { tree->Branch("tp_dz",&tp_dz, "tp_dz[tp_n]/D");  }; 
void Branch_bs_xyz(TTree * tree) { tree->Branch("bs_xyz", "TClonesArray",&bs_xyz, 32000, 0); }; 
void Branch_bs_sigmaZ(TTree * tree) { tree->Branch("bs_sigmaZ",&bs_sigmaZ, "bs_sigmaZ/F");  }; 
void Branch_bs_x0Error(TTree * tree) { tree->Branch("bs_x0Error",&bs_x0Error, "bs_x0Error/F");  }; 
void Branch_bs_y0Error(TTree * tree) { tree->Branch("bs_y0Error",&bs_y0Error, "bs_y0Error/F");  }; 
void Branch_bs_z0Error(TTree * tree) { tree->Branch("bs_z0Error",&bs_z0Error, "bs_z0Error/F");  }; 
void Branch_bs_sigmaZ0Error(TTree * tree) { tree->Branch("bs_sigmaZ0Error",&bs_sigmaZ0Error, "bs_sigmaZ0Error/F");  }; 
void Branch_vtx_n(TTree * tree) { tree->Branch("vtx_n",&vtx_n, "vtx_n/I"); }; 
void Branch_vtx_xyz(TTree * tree) { tree->Branch("vtx_xyz", "TClonesArray",&vtx_xyz, 32000, 0); }; 
void Branch_vtx_dxdydz(TTree * tree) { tree->Branch("vtx_dxdydz", "TClonesArray",&vtx_dxdydz, 32000, 0); }; 
void Branch_vtx_vectorp3(TTree * tree) { tree->Branch("vtx_vectorp3", "TClonesArray",&vtx_vectorp3, 32000, 0); }; 
void Branch_vtx_x2dof(TTree * tree) { tree->Branch("vtx_x2dof",&vtx_x2dof, "vtx_x2dof[vtx_n]/F"); }; 
void Branch_vtx_ndof(TTree * tree) { tree->Branch("vtx_ndof",&vtx_ndof, "vtx_ndof[vtx_n]/F"); }; 
void Branch_vtx_scalarpt(TTree * tree) { tree->Branch("vtx_scalarpt",&vtx_scalarpt, "vtx_scalarpt[vtx_n]/F"); }; 
void Branch_vtx_ntks(TTree * tree) { tree->Branch("vtx_ntks",&vtx_ntks, "vtx_ntks[vtx_n]/I"); }; 
void Branch_vtx_tkind(TTree * tree) { tree->Branch("vtx_tkind", "std::vector<std::vector<unsigned short> >", &vtx_tkind); }; 
void Branch_vtx_tkweight(TTree * tree) { tree->Branch("vtx_tkweight", "std::vector<std::vector<float> >", &vtx_tkweight); }; 
void Branch_bs_std_xyz(TTree * tree) { tree->Branch("bs_std_xyz", "TClonesArray",&bs_std_xyz, 32000, 0); }; 
void Branch_bs_std_sigmaZ(TTree * tree) { tree->Branch("bs_std_sigmaZ",&bs_std_sigmaZ, "bs_sigmaZ/F");  }; 
void Branch_bs_std_x0Error(TTree * tree) { tree->Branch("bs_std_x0Error",&bs_std_x0Error, "bs_x0Error/F");  }; 
void Branch_bs_std_y0Error(TTree * tree) { tree->Branch("bs_std_y0Error",&bs_std_y0Error, "bs_y0Error/F");  }; 
void Branch_bs_std_z0Error(TTree * tree) { tree->Branch("bs_std_z0Error",&bs_std_z0Error, "bs_z0Error/F");  }; 
void Branch_bs_std_sigmaZ0Error(TTree * tree) { tree->Branch("bs_std_sigmaZ0Error",&bs_std_sigmaZ0Error, "bs_sigmaZ0Error/F");  }; 
void Branch_vtx_std_n(TTree * tree) { tree->Branch("vtx_std_n",&vtx_std_n, "vtx_std_n/I"); }; 
void Branch_vtx_std_xyz(TTree * tree) { tree->Branch("vtx_std_xyz", "TClonesArray",&vtx_std_xyz, 32000, 0); }; 
void Branch_vtx_std_dxdydz(TTree * tree) { tree->Branch("vtx_std_dxdydz", "TClonesArray",&vtx_std_dxdydz, 32000, 0); }; 
void Branch_vtx_std_vectorp3(TTree * tree) { tree->Branch("vtx_std_vectorp3", "TClonesArray",&vtx_std_vectorp3, 32000, 0); }; 
void Branch_vtx_std_x2dof(TTree * tree) { tree->Branch("vtx_std_x2dof",&vtx_std_x2dof, "vtx_std_x2dof[vtx_std_n]/F"); }; 
void Branch_vtx_std_ndof(TTree * tree) { tree->Branch("vtx_std_ndof",&vtx_std_ndof, "vtx_std_ndof[vtx_std_n]/F"); }; 
void Branch_vtx_std_scalarpt(TTree * tree) { tree->Branch("vtx_std_scalarpt",&vtx_std_scalarpt, "vtx_std_scalarpt[vtx_std_n]/F"); }; 
void Branch_vtx_std_ntks(TTree * tree) { tree->Branch("vtx_std_ntks",&vtx_std_ntks, "vtx_std_ntks[vtx_std_n]/I"); }; 
void Branch_vtx_std_tkind(TTree * tree) { tree->Branch("vtx_std_tkind", "std::vector<std::vector<unsigned short> >", &vtx_std_tkind); }; 
void Branch_vtx_std_tkweight(TTree * tree) { tree->Branch("vtx_std_tkweight", "std::vector<std::vector<float> >", &vtx_std_tkweight); }; 
void Branch_pho_r19(TTree * tree) { tree->Branch("pho_r19",&pho_r19, "pho_r19[pho_n]/F"); };
void Branch_pho_maxoraw(TTree * tree) { tree->Branch("pho_maxoraw",&pho_maxoraw, "pho_maxoraw[pho_n]/F"); };
void Branch_pho_cep(TTree * tree) { tree->Branch("pho_cep",&pho_cep, "pho_cep[pho_n]/F"); };
void Branch_pho_lambdaratio(TTree * tree) { tree->Branch("pho_lambdaratio",&pho_lambdaratio, "pho_lambdaratio[pho_n]/F"); };
void Branch_pho_lambdadivcov(TTree * tree) { tree->Branch("pho_lambdadivcov",&pho_lambdadivcov, "pho_lambdadivcov[pho_n]/F"); };
void Branch_pho_etawidth(TTree * tree) { tree->Branch("pho_etawidth",&pho_etawidth, "pho_etawidth[pho_n]/F"); };
void Branch_pho_brem(TTree * tree) { tree->Branch("pho_brem",&pho_brem, "pho_brem[pho_n]/F"); };
void Branch_pho_smaj(TTree * tree) { tree->Branch("pho_smaj",&pho_smaj, "pho_smaj[pho_n]/F"); };
void Branch_pho_e2x2(TTree * tree) { tree->Branch("pho_e2x2",&pho_e2x2, "pho_e2x2[pho_n]/F"); };
void Branch_pho_pfiso_myneutral01(TTree * tree) { tree->Branch("pho_pfiso_myneutral01", &pho_pfiso_myneutral01, "pho_pfiso_myneutral01[pho_n]/F"); };
void Branch_pho_pfiso_myneutral02(TTree * tree) { tree->Branch("pho_pfiso_myneutral02", &pho_pfiso_myneutral02, "pho_pfiso_myneutral02[pho_n]/F"); };
void Branch_pho_pfiso_myneutral03(TTree * tree) { tree->Branch("pho_pfiso_myneutral03", &pho_pfiso_myneutral03, "pho_pfiso_myneutral03[pho_n]/F"); };
void Branch_pho_pfiso_myneutral04(TTree * tree) { tree->Branch("pho_pfiso_myneutral04", &pho_pfiso_myneutral04, "pho_pfiso_myneutral04[pho_n]/F"); };
void Branch_pho_pfiso_myneutral05(TTree * tree) { tree->Branch("pho_pfiso_myneutral05", &pho_pfiso_myneutral05, "pho_pfiso_myneutral05[pho_n]/F"); };
void Branch_pho_pfiso_myneutral06(TTree * tree) { tree->Branch("pho_pfiso_myneutral06", &pho_pfiso_myneutral06, "pho_pfiso_myneutral06[pho_n]/F"); };
void Branch_pho_pfiso_myphoton01(TTree * tree) { tree->Branch("pho_pfiso_myphoton01", &pho_pfiso_myphoton01, "pho_pfiso_myphoton01[pho_n]/F"); };
void Branch_pho_pfiso_myphoton02(TTree * tree) { tree->Branch("pho_pfiso_myphoton02", &pho_pfiso_myphoton02, "pho_pfiso_myphoton02[pho_n]/F"); };
void Branch_pho_pfiso_myphoton03(TTree * tree) { tree->Branch("pho_pfiso_myphoton03", &pho_pfiso_myphoton03, "pho_pfiso_myphoton03[pho_n]/F"); };
void Branch_pho_pfiso_myphoton04(TTree * tree) { tree->Branch("pho_pfiso_myphoton04", &pho_pfiso_myphoton04, "pho_pfiso_myphoton04[pho_n]/F"); };
void Branch_pho_pfiso_myphoton05(TTree * tree) { tree->Branch("pho_pfiso_myphoton05", &pho_pfiso_myphoton05, "pho_pfiso_myphoton05[pho_n]/F"); };
void Branch_pho_pfiso_myphoton06(TTree * tree) { tree->Branch("pho_pfiso_myphoton06", &pho_pfiso_myphoton06, "pho_pfiso_myphoton06[pho_n]/F"); };
void Branch_pho_pfiso_mycharged01(TTree * tree) { tree->Branch("pho_pfiso_mycharged01", "std::vector<std::vector<float> >", &pho_pfiso_mycharged01); };
void Branch_pho_pfiso_mycharged02(TTree * tree) { tree->Branch("pho_pfiso_mycharged02", "std::vector<std::vector<float> >", &pho_pfiso_mycharged02); };
void Branch_pho_pfiso_mycharged03(TTree * tree) { tree->Branch("pho_pfiso_mycharged03", "std::vector<std::vector<float> >", &pho_pfiso_mycharged03); };
void Branch_pho_pfiso_mycharged04(TTree * tree) { tree->Branch("pho_pfiso_mycharged04", "std::vector<std::vector<float> >", &pho_pfiso_mycharged04); };
void Branch_pho_pfiso_mycharged05(TTree * tree) { tree->Branch("pho_pfiso_mycharged05", "std::vector<std::vector<float> >", &pho_pfiso_mycharged05); };
void Branch_pho_pfiso_mycharged06(TTree * tree) { tree->Branch("pho_pfiso_mycharged06", "std::vector<std::vector<float> >", &pho_pfiso_mycharged06); };
void Branch_pho_isPFPhoton(TTree * tree) { tree->Branch("pho_isPFPhoton",&pho_isPFPhoton, "pho_isPFPhoton[pho_n]/I"); };
void Branch_pho_isPFElectron(TTree * tree) { tree->Branch("pho_isPFElectron",&pho_isPFElectron, "pho_isPFElectron[pho_n]/I"); };
void Branch_pho_must(TTree * tree) { tree->Branch("pho_must",&pho_must, "pho_must[pho_n]/F"); };
void Branch_pho_mustnc(TTree * tree) { tree->Branch("pho_mustnc",&pho_mustnc, "pho_mustnc[pho_n]/I"); };
void Branch_pho_pfpresh1(TTree * tree) { tree->Branch("pho_pfpresh1",&pho_pfpresh1, "pho_pfpresh1[pho_n]/F"); };
void Branch_pho_pfpresh2(TTree * tree) { tree->Branch("pho_pfpresh2",&pho_pfpresh2, "pho_pfpresh2[pho_n]/F"); };
void Branch_pho_mustenergy(TTree * tree) { tree->Branch("pho_mustenergy",&pho_mustenergy, "pho_mustenergy[pho_n]/F"); };
void Branch_pho_mustenergyout(TTree * tree) { tree->Branch("pho_mustenergyout",&pho_mustenergyout, "pho_mustenergyout[pho_n]/F"); };
void Branch_pho_pflowE(TTree * tree) { tree->Branch("pho_pflowE",&pho_pflowE, "pho_pflowE[pho_n]/F"); };
void Branch_pho_pfdeta(TTree * tree) { tree->Branch("pho_pfdeta",&pho_pfdeta, "pho_pfdeta[pho_n]/F"); };
void Branch_pho_pfdphi(TTree * tree) { tree->Branch("pho_pfdphi",&pho_pfdphi, "pho_pfdphi[pho_n]/F"); };
void Branch_pho_pfclusrms(TTree * tree) { tree->Branch("pho_pfclusrms",&pho_pfclusrms, "pho_pfclusrms[pho_n]/F"); };
void Branch_pho_pfclusrmsmust(TTree * tree) { tree->Branch("pho_pfclusrmsmust",&pho_pfclusrmsmust, "pho_pfclusrmsmust[pho_n]/F"); };
void Branch_pho_eseffsixix(TTree * tree) { tree->Branch("pho_eseffsixix",&pho_eseffsixix, "pho_eseffsixix[pho_n]/F"); };
void Branch_pho_eseffsiyiy(TTree * tree) { tree->Branch("pho_eseffsiyiy",&pho_eseffsiyiy, "pho_eseffsiyiy[pho_n]/F"); };
    
void Branch_jet_algoPF1_pfloose(TTree* tree) { tree->Branch("jet_algoPF1_pfloose", &jet_algoPF1_pfloose, "jet_algoPF1_pfloose[jet_algoPF1_n]/O"); };
void Branch_jet_algoPF2_pfloose(TTree* tree) { tree->Branch("jet_algoPF2_pfloose", &jet_algoPF2_pfloose, "jet_algoPF2_pfloose[jet_algoPF2_n]/O"); };
void Branch_jet_algoPF3_pfloose(TTree* tree) { tree->Branch("jet_algoPF3_pfloose", &jet_algoPF3_pfloose, "jet_algoPF3_pfloose[jet_algoPF3_n]/O"); };
void Branch_jet_algoPF3_frac06(TTree* tree) { tree->Branch("jet_algoPF3_frac06", &jet_algoPF3_frac06, "jet_algoPF3_frac06[jet_algoPF3_n]/F"); };
void Branch_jet_algoPF3_frac07(TTree* tree) { tree->Branch("jet_algoPF3_frac07", &jet_algoPF3_frac07, "jet_algoPF3_frac07[jet_algoPF3_n]/F"); };
void Branch_jet_algoPF2_frac07(TTree* tree) { tree->Branch("jet_algoPF2_frac07", &jet_algoPF2_frac07, "jet_algoPF2_frac07[jet_algoPF2_n]/F"); };
void Branch_jet_algoPF2_frac06(TTree* tree) { tree->Branch("jet_algoPF2_frac06", &jet_algoPF2_frac06, "jet_algoPF2_frac06[jet_algoPF2_n]/F"); };
void Branch_jet_algoPF1_frac06(TTree* tree) { tree->Branch("jet_algoPF1_frac06", &jet_algoPF1_frac06, "jet_algoPF1_frac06[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF1_frac07(TTree* tree) { tree->Branch("jet_algoPF1_frac07", &jet_algoPF1_frac07, "jet_algoPF1_frac07[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF1_genMatched(TTree* tree) { tree->Branch("jet_algoPF1_genMatched", &jet_algoPF1_genMatched, "jet_algoPF1_genMatched[jet_algoPF1_n]/O"); };
void Branch_jet_algoPF2_genMatched(TTree* tree) { tree->Branch("jet_algoPF2_genMatched", &jet_algoPF2_genMatched, "jet_algoPF2_genMatched[jet_algoPF2_n]/O"); };
void Branch_jet_algoPF3_genMatched(TTree* tree) { tree->Branch("jet_algoPF3_genMatched", &jet_algoPF3_genMatched, "jet_algoPF3_genMatched[jet_algoPF3_n]/O"); };
void Branch_jet_algoPF3_genPt(TTree* tree) { tree->Branch("jet_algoPF3_genPt", &jet_algoPF3_genPt, "jet_algoPF3_genPt[jet_algoPF3_n]/F"); };
void Branch_jet_algoPF2_genPt(TTree* tree) { tree->Branch("jet_algoPF2_genPt", &jet_algoPF2_genPt, "jet_algoPF2_genPt[jet_algoPF2_n]/F"); };
void Branch_jet_algoPF1_genPt(TTree* tree) { tree->Branch("jet_algoPF1_genPt", &jet_algoPF1_genPt, "jet_algoPF1_genPt[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF1_genDr(TTree* tree) { tree->Branch("jet_algoPF1_genDr", &jet_algoPF1_genDr, "jet_algoPF1_genDr[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF2_genDr(TTree* tree) { tree->Branch("jet_algoPF2_genDr", &jet_algoPF2_genDr, "jet_algoPF2_genDr[jet_algoPF2_n]/F"); };
void Branch_jet_algoPF3_genDr(TTree* tree) { tree->Branch("jet_algoPF3_genDr", &jet_algoPF3_genDr, "jet_algoPF3_genDr[jet_algoPF3_n]/F"); };
void Branch_jet_algoPF3_vbfMatched(TTree* tree) { tree->Branch("jet_algoPF3_vbfMatched", &jet_algoPF3_vbfMatched, "jet_algoPF3_vbfMatched[jet_algoPF3_n]/O"); };
void Branch_jet_algoPF2_vbfMatched(TTree* tree) { tree->Branch("jet_algoPF2_vbfMatched", &jet_algoPF2_vbfMatched, "jet_algoPF2_vbfMatched[jet_algoPF2_n]/O"); };
void Branch_jet_algoPF1_vbfMatched(TTree* tree) { tree->Branch("jet_algoPF1_vbfMatched", &jet_algoPF1_vbfMatched, "jet_algoPF1_vbfMatched[jet_algoPF1_n]/O"); };
//ELE ID 2012
void Branch_el_std_conv_vtxProb(TTree * tree) { tree->Branch("el_std_conv_vtxProb",&el_std_conv_vtxProb, "el_std_conv_vtxProb[el_std_n]/F"); };
void Branch_el_std_conv(TTree * tree) { tree->Branch("el_std_conv",&el_std_conv, "el_std_conv[el_std_n]/I"); };
void Branch_el_std_pfiso_charged(TTree* tree) { tree->Branch("el_std_pfiso_charged", &el_std_pfiso_charged, "el_std_pfiso_charged[el_std_n]/F"); };
void Branch_el_std_pfiso_neutral(TTree* tree) { tree->Branch("el_std_pfiso_neutral", &el_std_pfiso_neutral, "el_std_pfiso_neutral[el_std_n]/F"); };
void Branch_el_std_pfiso_photon(TTree* tree) { tree->Branch("el_std_pfiso_photon", &el_std_pfiso_photon, "el_std_pfiso_photon[el_std_n]/F"); };
//
void Branch_pho_hcalbcsumetconedr03(TTree* tree) { tree->Branch("pho_hcalbcsumetconedr03", &pho_hcalbcsumetconedr03, "pho_hcalbcsumetconedr03[pho_n]/F"); };
void Branch_pho_hcalbcsumetconedr04(TTree* tree) { tree->Branch("pho_hcalbcsumetconedr04", &pho_hcalbcsumetconedr04, "pho_hcalbcsumetconedr04[pho_n]/F"); };
void Branch_pho_hoe_bc(TTree* tree) { tree->Branch("pho_hoe_bc", &pho_hoe_bc, "pho_hoe_bc[pho_n]/F"); };
void Branch_jet_algoPF1_cutbased_wp_level(TTree* tree) { tree->Branch("jet_algoPF1_cutbased_wp_level", &jet_algoPF1_cutbased_wp_level, "jet_algoPF1_cutbased_wp_level[jet_algoPF1_n]/I"); };
void Branch_jet_algoPF2_cutbased_wp_level(TTree* tree) { tree->Branch("jet_algoPF2_cutbased_wp_level", &jet_algoPF2_cutbased_wp_level, "jet_algoPF2_cutbased_wp_level[jet_algoPF2_n]/I"); };
void Branch_jet_algoPF3_cutbased_wp_level(TTree* tree) { tree->Branch("jet_algoPF3_cutbased_wp_level", &jet_algoPF3_cutbased_wp_level, "jet_algoPF3_cutbased_wp_level[jet_algoPF3_n]/I"); };
void Branch_jet_algoPF1_beta_ext(TTree* tree) { tree->Branch("jet_algoPF1_beta_ext", "std::vector<std::vector<float>  >", &jet_algoPF1_beta_ext); };
void Branch_jet_algoPF1_betaStar_ext(TTree* tree) { tree->Branch("jet_algoPF1_betaStar_ext", "std::vector<std::vector<float>  >", &jet_algoPF1_betaStar_ext); };
void Branch_jet_algoPF1_betaStarClassic_ext(TTree* tree) { tree->Branch("jet_algoPF1_betaStarClassic_ext", "std::vector<std::vector<float>  >", &jet_algoPF1_betaStarClassic_ext); };
void Branch_jet_algoPF2_beta_ext(TTree* tree) { tree->Branch("jet_algoPF2_beta_ext", "std::vector<std::vector<float>  >", &jet_algoPF2_beta_ext); };
void Branch_jet_algoPF2_betaStar_ext(TTree* tree) { tree->Branch("jet_algoPF2_betaStar_ext", "std::vector<std::vector<float>  >", &jet_algoPF2_betaStar_ext); };
void Branch_jet_algoPF2_betaStarClassic_ext(TTree* tree) { tree->Branch("jet_algoPF2_betaStarClassic_ext", "std::vector<std::vector<float>  >", &jet_algoPF2_betaStarClassic_ext); };
void Branch_jet_algoPF3_beta_ext(TTree* tree) { tree->Branch("jet_algoPF3_beta_ext", "std::vector<std::vector<float>  >", &jet_algoPF3_beta_ext); };
void Branch_jet_algoPF3_betaStar_ext(TTree* tree) { tree->Branch("jet_algoPF3_betaStar_ext", "std::vector<std::vector<float>  >", &jet_algoPF3_betaStar_ext); };
void Branch_jet_algoPF3_betaStarClassic_ext(TTree* tree) { tree->Branch("jet_algoPF3_betaStarClassic_ext", "std::vector<std::vector<float>  >", &jet_algoPF3_betaStarClassic_ext); };
void Branch_pho_pfiso_barecharged01(TTree* tree) { tree->Branch("pho_pfiso_barecharged01", "std::vector<std::vector<float> >", &pho_pfiso_barecharged01); };
void Branch_pho_pfiso_barecharged02(TTree* tree) { tree->Branch("pho_pfiso_barecharged02", "std::vector<std::vector<float> >", &pho_pfiso_barecharged02); };
void Branch_pho_pfiso_barecharged03(TTree* tree) { tree->Branch("pho_pfiso_barecharged03", "std::vector<std::vector<float> >", &pho_pfiso_barecharged03); };
void Branch_pho_pfiso_barecharged04(TTree* tree) { tree->Branch("pho_pfiso_barecharged04", "std::vector<std::vector<float> >", &pho_pfiso_barecharged04); };
void Branch_pho_pfiso_barecharged05(TTree* tree) { tree->Branch("pho_pfiso_barecharged05", "std::vector<std::vector<float> >", &pho_pfiso_barecharged05); };
void Branch_pho_pfiso_barecharged06(TTree* tree) { tree->Branch("pho_pfiso_barecharged06", "std::vector<std::vector<float> >", &pho_pfiso_barecharged06); };
void Branch_pho_pfiso_egcharged01(TTree* tree) { tree->Branch("pho_pfiso_egcharged01", "std::vector<std::vector<float> >", &pho_pfiso_egcharged01); };
void Branch_pho_pfiso_egcharged02(TTree* tree) { tree->Branch("pho_pfiso_egcharged02", "std::vector<std::vector<float> >", &pho_pfiso_egcharged02); };
void Branch_pho_pfiso_egcharged03(TTree* tree) { tree->Branch("pho_pfiso_egcharged03", "std::vector<std::vector<float> >", &pho_pfiso_egcharged03); };
void Branch_pho_pfiso_egcharged04(TTree* tree) { tree->Branch("pho_pfiso_egcharged04", "std::vector<std::vector<float> >", &pho_pfiso_egcharged04); };
void Branch_pho_pfiso_egcharged05(TTree* tree) { tree->Branch("pho_pfiso_egcharged05", "std::vector<std::vector<float> >", &pho_pfiso_egcharged05); };
void Branch_pho_pfiso_egcharged06(TTree* tree) { tree->Branch("pho_pfiso_egcharged06", "std::vector<std::vector<float> >", &pho_pfiso_egcharged06); };
void Branch_pho_pfRawEnergy(TTree* tree) { tree->Branch("pho_pfRawEnergy", &pho_pfRawEnergy, "pho_pfRawEnergy[pho_n]/F"); };
void Branch_pho_pfe2nd(TTree* tree) { tree->Branch("pho_pfe2nd", &pho_pfe2nd, "pho_pfe2nd[pho_n]/F"); };
void Branch_pho_pfe2x2(TTree* tree) { tree->Branch("pho_pfe2x2", &pho_pfe2x2, "pho_pfe2x2[pho_n]/F"); };
void Branch_pho_pfe3x3(TTree* tree) { tree->Branch("pho_pfe3x3", &pho_pfe3x3, "pho_pfe3x3[pho_n]/F"); };
void Branch_pho_pfe5x5(TTree* tree) { tree->Branch("pho_pfe5x5", &pho_pfe5x5, "pho_pfe5x5[pho_n]/F"); };
void Branch_pho_pfemaxxtal(TTree* tree) { tree->Branch("pho_pfemaxxtal", &pho_pfemaxxtal, "pho_pfemaxxtal[pho_n]/F"); };
void Branch_pho_pfiso_barephoton01(TTree* tree) { tree->Branch("pho_pfiso_barephoton01", &pho_pfiso_barephoton01, "pho_pfiso_barephoton01[pho_n]/F"); };
void Branch_pho_pfiso_barephoton02(TTree* tree) { tree->Branch("pho_pfiso_barephoton02", &pho_pfiso_barephoton02, "pho_pfiso_barephoton02[pho_n]/F"); };
void Branch_pho_pfiso_barephoton03(TTree* tree) { tree->Branch("pho_pfiso_barephoton03", &pho_pfiso_barephoton03, "pho_pfiso_barephoton03[pho_n]/F"); };
void Branch_pho_pfiso_barephoton04(TTree* tree) { tree->Branch("pho_pfiso_barephoton04", &pho_pfiso_barephoton04, "pho_pfiso_barephoton04[pho_n]/F"); };
void Branch_pho_pfiso_barephoton05(TTree* tree) { tree->Branch("pho_pfiso_barephoton05", &pho_pfiso_barephoton05, "pho_pfiso_barephoton05[pho_n]/F"); };
void Branch_pho_pfiso_barephoton06(TTree* tree) { tree->Branch("pho_pfiso_barephoton06", &pho_pfiso_barephoton06, "pho_pfiso_barephoton06[pho_n]/F"); };
void Branch_pho_pfiso_egphoton01(TTree* tree) { tree->Branch("pho_pfiso_egphoton01", &pho_pfiso_egphoton01, "pho_pfiso_egphoton01[pho_n]/F"); };
void Branch_pho_pfiso_egphoton02(TTree* tree) { tree->Branch("pho_pfiso_egphoton02", &pho_pfiso_egphoton02, "pho_pfiso_egphoton02[pho_n]/F"); };
void Branch_pho_pfiso_egphoton03(TTree* tree) { tree->Branch("pho_pfiso_egphoton03", &pho_pfiso_egphoton03, "pho_pfiso_egphoton03[pho_n]/F"); };
void Branch_pho_pfiso_egphoton04(TTree* tree) { tree->Branch("pho_pfiso_egphoton04", &pho_pfiso_egphoton04, "pho_pfiso_egphoton04[pho_n]/F"); };
void Branch_pho_pfiso_egphoton05(TTree* tree) { tree->Branch("pho_pfiso_egphoton05", &pho_pfiso_egphoton05, "pho_pfiso_egphoton05[pho_n]/F"); };
void Branch_pho_pfiso_egphoton06(TTree* tree) { tree->Branch("pho_pfiso_egphoton06", &pho_pfiso_egphoton06, "pho_pfiso_egphoton06[pho_n]/F"); };
void Branch_pho_pfsieie(TTree* tree) { tree->Branch("pho_pfsieie", &pho_pfsieie, "pho_pfsieie[pho_n]/F"); };
void Branch_pho_pfsieip(TTree* tree) { tree->Branch("pho_pfsieip", &pho_pfsieip, "pho_pfsieip[pho_n]/F"); };
void Branch_pho_pfsipip(TTree* tree) { tree->Branch("pho_pfsipip", &pho_pfsipip, "pho_pfsipip[pho_n]/F"); };
void Branch_jet_algoPF1_full_wp_level_ext(TTree* tree) { tree->Branch("jet_algoPF1_full_wp_level_ext", "std::vector<std::vector<int> >", &jet_algoPF1_full_wp_level_ext); };
void Branch_jet_algoPF1_simple_wp_level_ext(TTree* tree) { tree->Branch("jet_algoPF1_simple_wp_level_ext", "std::vector<std::vector<int> >", &jet_algoPF1_simple_wp_level_ext); };
void Branch_jet_algoPF1_cutbased_wp_level_ext(TTree* tree) { tree->Branch("jet_algoPF1_cutbased_wp_level_ext", "std::vector<std::vector<int> >", &jet_algoPF1_cutbased_wp_level_ext); };
void Branch_jet_algoPF1_full_mva_ext(TTree* tree) { tree->Branch("jet_algoPF1_full_mva_ext", "std::vector<std::vector<float> >", &jet_algoPF1_full_mva_ext); };
void Branch_jet_algoPF1_simple_mva_ext(TTree* tree) { tree->Branch("jet_algoPF1_simple_mva_ext", "std::vector<std::vector<float> >", &jet_algoPF1_simple_mva_ext); };
void Branch_jet_algoPF2_full_wp_level_ext(TTree* tree) { tree->Branch("jet_algoPF2_full_wp_level_ext", "std::vector<std::vector<int> >", &jet_algoPF2_full_wp_level_ext); };
void Branch_jet_algoPF2_simple_wp_level_ext(TTree* tree) { tree->Branch("jet_algoPF2_simple_wp_level_ext", "std::vector<std::vector<int> >", &jet_algoPF2_simple_wp_level_ext); };
void Branch_jet_algoPF2_cutbased_wp_level_ext(TTree* tree) { tree->Branch("jet_algoPF2_cutbased_wp_level_ext", "std::vector<std::vector<int> >", &jet_algoPF2_cutbased_wp_level_ext); };
void Branch_jet_algoPF2_full_mva_ext(TTree* tree) { tree->Branch("jet_algoPF2_full_mva_ext", "std::vector<std::vector<float> >", &jet_algoPF2_full_mva_ext); };
void Branch_jet_algoPF2_simple_mva_ext(TTree* tree) { tree->Branch("jet_algoPF2_simple_mva_ext", "std::vector<std::vector<float> >", &jet_algoPF2_simple_mva_ext); };
void Branch_jet_algoPF3_full_wp_level_ext(TTree* tree) { tree->Branch("jet_algoPF3_full_wp_level_ext", "std::vector<std::vector<int> >", &jet_algoPF3_full_wp_level_ext); };
void Branch_jet_algoPF3_simple_wp_level_ext(TTree* tree) { tree->Branch("jet_algoPF3_simple_wp_level_ext", "std::vector<std::vector<int> >", &jet_algoPF3_simple_wp_level_ext); };
void Branch_jet_algoPF3_cutbased_wp_level_ext(TTree* tree) { tree->Branch("jet_algoPF3_cutbased_wp_level_ext", "std::vector<std::vector<int> >", &jet_algoPF3_cutbased_wp_level_ext); };
void Branch_jet_algoPF3_full_mva_ext(TTree* tree) { tree->Branch("jet_algoPF3_full_mva_ext", "std::vector<std::vector<float> >", &jet_algoPF3_full_mva_ext); };
void Branch_jet_algoPF3_simple_mva_ext(TTree* tree) { tree->Branch("jet_algoPF3_simple_mva_ext", "std::vector<std::vector<float> >", &jet_algoPF3_simple_mva_ext); };
void Branch_jet_algoPF3_area(TTree* tree) { tree->Branch("jet_algoPF3_area", &jet_algoPF3_area, "jet_algoPF3_area[jet_algoPF3_n]/F"); };
void Branch_jet_algoPF1_area(TTree* tree) { tree->Branch("jet_algoPF1_area", &jet_algoPF1_area, "jet_algoPF1_area[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF2_area(TTree* tree) { tree->Branch("jet_algoPF2_area", &jet_algoPF2_area, "jet_algoPF2_area[jet_algoPF2_n]/F"); };
void Branch_jet_algoPF1_nSecondaryVertices(TTree* tree) { tree->Branch("jet_algoPF1_nSecondaryVertices", &jet_algoPF1_nSecondaryVertices, "jet_algoPF1_nSecondaryVertices[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF1_secVtxPt(TTree* tree) { tree->Branch("jet_algoPF1_secVtxPt", &jet_algoPF1_secVtxPt, "jet_algoPF1_secVtxPt[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF1_secVtx3dL(TTree* tree) { tree->Branch("jet_algoPF1_secVtx3dL", &jet_algoPF1_secVtx3dL, "jet_algoPF1_secVtx3dL[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF1_secVtx3deL(TTree* tree) { tree->Branch("jet_algoPF1_secVtx3deL", &jet_algoPF1_secVtx3deL, "jet_algoPF1_secVtx3deL[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF2_nSecondaryVertices(TTree* tree) { tree->Branch("jet_algoPF2_nSecondaryVertices", &jet_algoPF2_nSecondaryVertices, "jet_algoPF2_nSecondaryVertices[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF2_secVtxPt(TTree* tree) { tree->Branch("jet_algoPF2_secVtxPt", &jet_algoPF2_secVtxPt, "jet_algoPF2_secVtxPt[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF2_secVtx3dL(TTree* tree) { tree->Branch("jet_algoPF2_secVtx3dL", &jet_algoPF2_secVtx3dL, "jet_algoPF2_secVtx3dL[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF2_secVtx3deL(TTree* tree) { tree->Branch("jet_algoPF2_secVtx3deL", &jet_algoPF2_secVtx3deL, "jet_algoPF2_secVtx3deL[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF3_nSecondaryVertices(TTree* tree) { tree->Branch("jet_algoPF3_nSecondaryVertices", &jet_algoPF3_nSecondaryVertices, "jet_algoPF3_nSecondaryVertices[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF3_secVtxPt(TTree* tree) { tree->Branch("jet_algoPF3_secVtxPt", &jet_algoPF3_secVtxPt, "jet_algoPF3_secVtxPt[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF3_secVtx3dL(TTree* tree) { tree->Branch("jet_algoPF3_secVtx3dL", &jet_algoPF3_secVtx3dL, "jet_algoPF3_secVtx3dL[jet_algoPF1_n]/F"); };
void Branch_jet_algoPF3_secVtx3deL(TTree* tree) { tree->Branch("jet_algoPF3_secVtx3deL", &jet_algoPF3_secVtx3deL, "jet_algoPF3_secVtx3deL[jet_algoPF1_n]/F"); };
